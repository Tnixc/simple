<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="124"><g><title>simple`alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.81%)</title><rect x="0.0000%" y="629" width="0.8065%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>libcopyfile.dylib`copyfile_internal (1 samples, 0.81%)</title><rect x="0.8065%" y="501" width="0.8065%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="1.0565%" y="511.50"></text></g><g><title>libsystem_c.dylib`fstatx_np (1 samples, 0.81%)</title><rect x="0.8065%" y="485" width="0.8065%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.0565%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__fstat64_extended (1 samples, 0.81%)</title><rect x="0.8065%" y="469" width="0.8065%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.0565%" y="479.50"></text></g><g><title>simple`simple::utils::copy_into (2 samples, 1.61%)</title><rect x="0.8065%" y="565" width="1.6129%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="1.0565%" y="575.50"></text></g><g><title>simple`simple::utils::copy_into (2 samples, 1.61%)</title><rect x="0.8065%" y="549" width="1.6129%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="1.0565%" y="559.50"></text></g><g><title>simple`std::sys::pal::unix::fs::copy (2 samples, 1.61%)</title><rect x="0.8065%" y="533" width="1.6129%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="2"/><text x="1.0565%" y="543.50"></text></g><g><title>libcopyfile.dylib`fcopyfile (2 samples, 1.61%)</title><rect x="0.8065%" y="517" width="1.6129%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="2"/><text x="1.0565%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.81%)</title><rect x="1.6129%" y="501" width="0.8065%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="1.8629%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.81%)</title><rect x="2.4194%" y="549" width="0.8065%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="2.6694%" y="559.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="3.2258%" y="533" width="1.6129%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="2"/><text x="3.4758%" y="543.50"></text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (2 samples, 1.61%)</title><rect x="3.2258%" y="517" width="1.6129%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="2"/><text x="3.4758%" y="527.50"></text></g><g><title>simple`fancy_regex::vm::run (2 samples, 1.61%)</title><rect x="3.2258%" y="501" width="1.6129%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="2"/><text x="3.4758%" y="511.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="4.8387%" y="341" width="0.8065%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="5.0887%" y="351.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="4.8387%" y="325" width="0.8065%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="5.0887%" y="335.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="4.8387%" y="309" width="0.8065%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="5.0887%" y="319.50"></text></g><g><title>simple`regex_automata::util::determinize::state::State::dead (1 samples, 0.81%)</title><rect x="4.8387%" y="293" width="0.8065%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="5.0887%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (2 samples, 1.61%)</title><rect x="4.8387%" y="421" width="1.6129%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="5.0887%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="4.8387%" y="405" width="1.6129%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="2"/><text x="5.0887%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="4.8387%" y="389" width="1.6129%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="2"/><text x="5.0887%" y="399.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="4.8387%" y="373" width="1.6129%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="2"/><text x="5.0887%" y="383.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="4.8387%" y="357" width="1.6129%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="2"/><text x="5.0887%" y="367.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="5.6452%" y="341" width="0.8065%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="5.8952%" y="351.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="5.6452%" y="325" width="0.8065%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="5.8952%" y="335.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="5.6452%" y="309" width="0.8065%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="5.8952%" y="319.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="5.6452%" y="293" width="0.8065%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="5.8952%" y="303.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.81%)</title><rect x="5.6452%" y="277" width="0.8065%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="5.8952%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="5.6452%" y="261" width="0.8065%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="5.8952%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::add (1 samples, 0.81%)</title><rect x="5.6452%" y="245" width="0.8065%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="5.8952%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (1 samples, 0.81%)</title><rect x="5.6452%" y="229" width="0.8065%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="5.8952%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.81%)</title><rect x="5.6452%" y="213" width="0.8065%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="5.8952%" y="223.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="6.4516%" y="389" width="0.8065%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="6.7016%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="6.4516%" y="373" width="0.8065%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="6.7016%" y="383.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="6.4516%" y="357" width="0.8065%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="6.7016%" y="367.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="6.4516%" y="341" width="0.8065%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="6.7016%" y="351.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="6.4516%" y="325" width="0.8065%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="6.7016%" y="335.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="6.4516%" y="309" width="0.8065%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="6.7016%" y="319.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="6.4516%" y="293" width="0.8065%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="6.7016%" y="303.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="6.4516%" y="277" width="0.8065%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="6.7016%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::add (1 samples, 0.81%)</title><rect x="6.4516%" y="261" width="0.8065%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="6.7016%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (1 samples, 0.81%)</title><rect x="6.4516%" y="245" width="0.8065%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="6.7016%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (1 samples, 0.81%)</title><rect x="6.4516%" y="229" width="0.8065%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="6.7016%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.81%)</title><rect x="6.4516%" y="213" width="0.8065%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="1"/><text x="6.7016%" y="223.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="6.4516%" y="197" width="0.8065%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="1"/><text x="6.7016%" y="207.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="6.4516%" y="181" width="0.8065%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="1"/><text x="6.7016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="6.4516%" y="165" width="0.8065%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="1"/><text x="6.7016%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="6.4516%" y="149" width="0.8065%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="6.7016%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.81%)</title><rect x="6.4516%" y="133" width="0.8065%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="6.7016%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.81%)</title><rect x="6.4516%" y="117" width="0.8065%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="6.7016%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.81%)</title><rect x="6.4516%" y="101" width="0.8065%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="6.7016%" y="111.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="7.2581%" y="261" width="0.8065%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="7.5081%" y="271.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="7.2581%" y="245" width="0.8065%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="7.5081%" y="255.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="7.2581%" y="229" width="0.8065%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="7.5081%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::dense::DFA&lt;alloc::vec::Vec&lt;u32&gt;&gt;::shuffle (1 samples, 0.81%)</title><rect x="7.2581%" y="213" width="0.8065%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="7.5081%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.81%)</title><rect x="7.2581%" y="197" width="0.8065%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="7.5081%" y="207.50"></text></g><g><title>simple`fancy_regex::Regex::new (5 samples, 4.03%)</title><rect x="4.8387%" y="533" width="4.0323%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="5"/><text x="5.0887%" y="543.50">simp..</text></g><g><title>simple`fancy_regex::Regex::new_options (5 samples, 4.03%)</title><rect x="4.8387%" y="517" width="4.0323%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="5"/><text x="5.0887%" y="527.50">simp..</text></g><g><title>simple`fancy_regex::compile::compile (5 samples, 4.03%)</title><rect x="4.8387%" y="501" width="4.0323%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="5"/><text x="5.0887%" y="511.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="4.8387%" y="485" width="4.0323%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="5"/><text x="5.0887%" y="495.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="4.8387%" y="469" width="4.0323%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="5"/><text x="5.0887%" y="479.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="4.8387%" y="453" width="4.0323%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="5"/><text x="5.0887%" y="463.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="4.8387%" y="437" width="4.0323%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="5"/><text x="5.0887%" y="447.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (3 samples, 2.42%)</title><rect x="6.4516%" y="421" width="2.4194%" height="15" fill="rgb(210,229,1)" fg:x="8" fg:w="3"/><text x="6.7016%" y="431.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="6.4516%" y="405" width="2.4194%" height="15" fill="rgb(222,148,37)" fg:x="8" fg:w="3"/><text x="6.7016%" y="415.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="7.2581%" y="389" width="1.6129%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="2"/><text x="7.5081%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="7.2581%" y="373" width="1.6129%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="2"/><text x="7.5081%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="7.2581%" y="357" width="1.6129%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="2"/><text x="7.5081%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="7.2581%" y="341" width="1.6129%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="2"/><text x="7.5081%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="7.2581%" y="325" width="1.6129%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="2"/><text x="7.5081%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="7.2581%" y="309" width="1.6129%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="2"/><text x="7.5081%" y="319.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="7.2581%" y="293" width="1.6129%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="2"/><text x="7.5081%" y="303.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="7.2581%" y="277" width="1.6129%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="2"/><text x="7.5081%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="8.0645%" y="261" width="0.8065%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="8.3145%" y="271.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="8.0645%" y="245" width="0.8065%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="8.3145%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="8.0645%" y="229" width="0.8065%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="8.3145%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="8.0645%" y="213" width="0.8065%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="8.3145%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="8.0645%" y="197" width="0.8065%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="8.3145%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="8.0645%" y="181" width="0.8065%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="8.3145%" y="191.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="8.0645%" y="165" width="0.8065%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="8.3145%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="8.0645%" y="149" width="0.8065%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="1"/><text x="8.3145%" y="159.50"></text></g><g><title>simple`comrak::plugins::syntect::SyntectAdapterBuilder::build (1 samples, 0.81%)</title><rect x="8.8710%" y="517" width="0.8065%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="9.1210%" y="527.50"></text></g><g><title>simple`syntect::dumps::_&lt;impl syntect::parsing::syntax_set::SyntaxSet&gt;::load_defaults_newlines (1 samples, 0.81%)</title><rect x="8.8710%" y="501" width="0.8065%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="9.1210%" y="511.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="8.8710%" y="485" width="0.8065%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="9.1210%" y="495.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="8.8710%" y="469" width="0.8065%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="9.1210%" y="479.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="8.8710%" y="453" width="0.8065%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="9.1210%" y="463.50"></text></g><g><title>simple`serde::de::SeqAccess::next_element (1 samples, 0.81%)</title><rect x="8.8710%" y="437" width="0.8065%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="9.1210%" y="447.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="8.8710%" y="421" width="0.8065%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="9.1210%" y="431.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="9.6774%" y="309" width="0.8065%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="1"/><text x="9.9274%" y="319.50"></text></g><g><title>simple`regex_automata::nfa::thompson::pikevm::Builder::configure (1 samples, 0.81%)</title><rect x="9.6774%" y="293" width="0.8065%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="1"/><text x="9.9274%" y="303.50"></text></g><g><title>simple`simple::markdown::markdown_element (3 samples, 2.42%)</title><rect x="8.8710%" y="533" width="2.4194%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="3"/><text x="9.1210%" y="543.50">si..</text></g><g><title>simple`fancy_regex::Regex::new (2 samples, 1.61%)</title><rect x="9.6774%" y="517" width="1.6129%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="2"/><text x="9.9274%" y="527.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (2 samples, 1.61%)</title><rect x="9.6774%" y="501" width="1.6129%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="2"/><text x="9.9274%" y="511.50"></text></g><g><title>simple`fancy_regex::compile::compile (2 samples, 1.61%)</title><rect x="9.6774%" y="485" width="1.6129%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="2"/><text x="9.9274%" y="495.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="469" width="1.6129%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="2"/><text x="9.9274%" y="479.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="453" width="1.6129%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="2"/><text x="9.9274%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="437" width="1.6129%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="2"/><text x="9.9274%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="421" width="1.6129%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="2"/><text x="9.9274%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="405" width="1.6129%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="2"/><text x="9.9274%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="9.6774%" y="389" width="1.6129%" height="15" fill="rgb(233,208,19)" fg:x="12" fg:w="2"/><text x="9.9274%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="9.6774%" y="373" width="1.6129%" height="15" fill="rgb(216,164,2)" fg:x="12" fg:w="2"/><text x="9.9274%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="9.6774%" y="357" width="1.6129%" height="15" fill="rgb(220,129,5)" fg:x="12" fg:w="2"/><text x="9.9274%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="9.6774%" y="341" width="1.6129%" height="15" fill="rgb(242,17,10)" fg:x="12" fg:w="2"/><text x="9.9274%" y="351.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="9.6774%" y="325" width="1.6129%" height="15" fill="rgb(242,107,0)" fg:x="12" fg:w="2"/><text x="9.9274%" y="335.50"></text></g><g><title>simple`regex_syntax::ast::parse::Parser::parse (1 samples, 0.81%)</title><rect x="10.4839%" y="309" width="0.8065%" height="15" fill="rgb(251,28,31)" fg:x="13" fg:w="1"/><text x="10.7339%" y="319.50"></text></g><g><title>simple`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1 samples, 0.81%)</title><rect x="10.4839%" y="293" width="0.8065%" height="15" fill="rgb(233,223,10)" fg:x="13" fg:w="1"/><text x="10.7339%" y="303.50"></text></g><g><title>simple`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (1 samples, 0.81%)</title><rect x="10.4839%" y="277" width="0.8065%" height="15" fill="rgb(215,21,27)" fg:x="13" fg:w="1"/><text x="10.7339%" y="287.50"></text></g><g><title>simple`regex_syntax::ast::ClassSetUnion::push (1 samples, 0.81%)</title><rect x="10.4839%" y="261" width="0.8065%" height="15" fill="rgb(232,23,21)" fg:x="13" fg:w="1"/><text x="10.7339%" y="271.50"></text></g><g><title>simple`core::hash::BuildHasher::hash_one (1 samples, 0.81%)</title><rect x="11.2903%" y="277" width="0.8065%" height="15" fill="rgb(244,5,23)" fg:x="14" fg:w="1"/><text x="11.5403%" y="287.50"></text></g><g><title>simple`simple::utils::page (2 samples, 1.61%)</title><rect x="11.2903%" y="533" width="1.6129%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="2"/><text x="11.5403%" y="543.50"></text></g><g><title>simple`fancy_regex::Regex::new (2 samples, 1.61%)</title><rect x="11.2903%" y="517" width="1.6129%" height="15" fill="rgb(247,70,30)" fg:x="14" fg:w="2"/><text x="11.5403%" y="527.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (2 samples, 1.61%)</title><rect x="11.2903%" y="501" width="1.6129%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="2"/><text x="11.5403%" y="511.50"></text></g><g><title>simple`fancy_regex::compile::compile (2 samples, 1.61%)</title><rect x="11.2903%" y="485" width="1.6129%" height="15" fill="rgb(240,187,13)" fg:x="14" fg:w="2"/><text x="11.5403%" y="495.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="11.2903%" y="469" width="1.6129%" height="15" fill="rgb(223,113,26)" fg:x="14" fg:w="2"/><text x="11.5403%" y="479.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="11.2903%" y="453" width="1.6129%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="2"/><text x="11.5403%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="11.2903%" y="437" width="1.6129%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="2"/><text x="11.5403%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="11.2903%" y="421" width="1.6129%" height="15" fill="rgb(247,173,49)" fg:x="14" fg:w="2"/><text x="11.5403%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (2 samples, 1.61%)</title><rect x="11.2903%" y="405" width="1.6129%" height="15" fill="rgb(224,114,35)" fg:x="14" fg:w="2"/><text x="11.5403%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="11.2903%" y="389" width="1.6129%" height="15" fill="rgb(245,159,27)" fg:x="14" fg:w="2"/><text x="11.5403%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="11.2903%" y="373" width="1.6129%" height="15" fill="rgb(245,172,44)" fg:x="14" fg:w="2"/><text x="11.5403%" y="383.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="11.2903%" y="357" width="1.6129%" height="15" fill="rgb(236,23,11)" fg:x="14" fg:w="2"/><text x="11.5403%" y="367.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="11.2903%" y="341" width="1.6129%" height="15" fill="rgb(205,117,38)" fg:x="14" fg:w="2"/><text x="11.5403%" y="351.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="11.2903%" y="325" width="1.6129%" height="15" fill="rgb(237,72,25)" fg:x="14" fg:w="2"/><text x="11.5403%" y="335.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="11.2903%" y="309" width="1.6129%" height="15" fill="rgb(244,70,9)" fg:x="14" fg:w="2"/><text x="11.5403%" y="319.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="11.2903%" y="293" width="1.6129%" height="15" fill="rgb(217,125,39)" fg:x="14" fg:w="2"/><text x="11.5403%" y="303.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="12.0968%" y="277" width="0.8065%" height="15" fill="rgb(235,36,10)" fg:x="15" fg:w="1"/><text x="12.3468%" y="287.50"></text></g><g><title>simple`regex_automata::util::determinize::state::State::iter_nfa_state_ids (1 samples, 0.81%)</title><rect x="12.0968%" y="261" width="0.8065%" height="15" fill="rgb(251,123,47)" fg:x="15" fg:w="1"/><text x="12.3468%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.81%)</title><rect x="12.9032%" y="469" width="0.8065%" height="15" fill="rgb(221,13,13)" fg:x="16" fg:w="1"/><text x="13.1532%" y="479.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 4.84%)</title><rect x="12.9032%" y="501" width="4.8387%" height="15" fill="rgb(238,131,9)" fg:x="16" fg:w="6"/><text x="13.1532%" y="511.50">simple..</text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (6 samples, 4.84%)</title><rect x="12.9032%" y="485" width="4.8387%" height="15" fill="rgb(211,50,8)" fg:x="16" fg:w="6"/><text x="13.1532%" y="495.50">simple..</text></g><g><title>simple`fancy_regex::vm::run (5 samples, 4.03%)</title><rect x="13.7097%" y="469" width="4.0323%" height="15" fill="rgb(245,182,24)" fg:x="17" fg:w="5"/><text x="13.9597%" y="479.50">simp..</text></g><g><title>simple`fancy_regex::vm::State::save (1 samples, 0.81%)</title><rect x="16.9355%" y="453" width="0.8065%" height="15" fill="rgb(242,14,37)" fg:x="21" fg:w="1"/><text x="17.1855%" y="463.50"></text></g><g><title>simple`core::str::pattern::TwoWaySearcher::next (1 samples, 0.81%)</title><rect x="17.7419%" y="501" width="0.8065%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="17.9919%" y="511.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="18.5484%" y="261" width="0.8065%" height="15" fill="rgb(213,55,15)" fg:x="23" fg:w="1"/><text x="18.7984%" y="271.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="18.5484%" y="245" width="0.8065%" height="15" fill="rgb(209,9,3)" fg:x="23" fg:w="1"/><text x="18.7984%" y="255.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="18.5484%" y="229" width="0.8065%" height="15" fill="rgb(230,59,30)" fg:x="23" fg:w="1"/><text x="18.7984%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="18.5484%" y="213" width="0.8065%" height="15" fill="rgb(209,121,21)" fg:x="23" fg:w="1"/><text x="18.7984%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="18.5484%" y="197" width="0.8065%" height="15" fill="rgb(220,109,13)" fg:x="23" fg:w="1"/><text x="18.7984%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.81%)</title><rect x="18.5484%" y="181" width="0.8065%" height="15" fill="rgb(232,18,1)" fg:x="23" fg:w="1"/><text x="18.7984%" y="191.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (3 samples, 2.42%)</title><rect x="18.5484%" y="389" width="2.4194%" height="15" fill="rgb(215,41,42)" fg:x="23" fg:w="3"/><text x="18.7984%" y="399.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (3 samples, 2.42%)</title><rect x="18.5484%" y="373" width="2.4194%" height="15" fill="rgb(224,123,36)" fg:x="23" fg:w="3"/><text x="18.7984%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::compile_inner (3 samples, 2.42%)</title><rect x="18.5484%" y="357" width="2.4194%" height="15" fill="rgb(240,125,3)" fg:x="23" fg:w="3"/><text x="18.7984%" y="367.50">si..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (3 samples, 2.42%)</title><rect x="18.5484%" y="341" width="2.4194%" height="15" fill="rgb(205,98,50)" fg:x="23" fg:w="3"/><text x="18.7984%" y="351.50">si..</text></g><g><title>simple`regex_automata::meta::strategy::new (3 samples, 2.42%)</title><rect x="18.5484%" y="325" width="2.4194%" height="15" fill="rgb(205,185,37)" fg:x="23" fg:w="3"/><text x="18.7984%" y="335.50">si..</text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (3 samples, 2.42%)</title><rect x="18.5484%" y="309" width="2.4194%" height="15" fill="rgb(238,207,15)" fg:x="23" fg:w="3"/><text x="18.7984%" y="319.50">si..</text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (3 samples, 2.42%)</title><rect x="18.5484%" y="293" width="2.4194%" height="15" fill="rgb(213,199,42)" fg:x="23" fg:w="3"/><text x="18.7984%" y="303.50">si..</text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (3 samples, 2.42%)</title><rect x="18.5484%" y="277" width="2.4194%" height="15" fill="rgb(235,201,11)" fg:x="23" fg:w="3"/><text x="18.7984%" y="287.50">si..</text></g><g><title>simple`regex_automata::util::determinize::next (2 samples, 1.61%)</title><rect x="19.3548%" y="261" width="1.6129%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="2"/><text x="19.6048%" y="271.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (2 samples, 1.61%)</title><rect x="19.3548%" y="245" width="1.6129%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="2"/><text x="19.6048%" y="255.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="20.9677%" y="293" width="0.8065%" height="15" fill="rgb(243,32,47)" fg:x="26" fg:w="1"/><text x="21.2177%" y="303.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="20.9677%" y="277" width="0.8065%" height="15" fill="rgb(247,202,23)" fg:x="26" fg:w="1"/><text x="21.2177%" y="287.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="20.9677%" y="261" width="0.8065%" height="15" fill="rgb(219,102,11)" fg:x="26" fg:w="1"/><text x="21.2177%" y="271.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="20.9677%" y="245" width="0.8065%" height="15" fill="rgb(243,110,44)" fg:x="26" fg:w="1"/><text x="21.2177%" y="255.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="20.9677%" y="229" width="0.8065%" height="15" fill="rgb(222,74,54)" fg:x="26" fg:w="1"/><text x="21.2177%" y="239.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="21.7742%" y="277" width="0.8065%" height="15" fill="rgb(216,99,12)" fg:x="27" fg:w="1"/><text x="22.0242%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="21.7742%" y="261" width="0.8065%" height="15" fill="rgb(226,22,26)" fg:x="27" fg:w="1"/><text x="22.0242%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="21.7742%" y="245" width="0.8065%" height="15" fill="rgb(217,163,10)" fg:x="27" fg:w="1"/><text x="22.0242%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="21.7742%" y="229" width="0.8065%" height="15" fill="rgb(213,25,53)" fg:x="27" fg:w="1"/><text x="22.0242%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="21.7742%" y="213" width="0.8065%" height="15" fill="rgb(252,105,26)" fg:x="27" fg:w="1"/><text x="22.0242%" y="223.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="21.7742%" y="197" width="0.8065%" height="15" fill="rgb(220,39,43)" fg:x="27" fg:w="1"/><text x="22.0242%" y="207.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="21.7742%" y="181" width="0.8065%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="1"/><text x="22.0242%" y="191.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (3 samples, 2.42%)</title><rect x="20.9677%" y="389" width="2.4194%" height="15" fill="rgb(252,8,32)" fg:x="26" fg:w="3"/><text x="21.2177%" y="399.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="20.9677%" y="373" width="2.4194%" height="15" fill="rgb(223,20,43)" fg:x="26" fg:w="3"/><text x="21.2177%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (3 samples, 2.42%)</title><rect x="20.9677%" y="357" width="2.4194%" height="15" fill="rgb(229,81,49)" fg:x="26" fg:w="3"/><text x="21.2177%" y="367.50">si..</text></g><g><title>simple`fancy_regex::compile::compile_inner (3 samples, 2.42%)</title><rect x="20.9677%" y="341" width="2.4194%" height="15" fill="rgb(236,28,36)" fg:x="26" fg:w="3"/><text x="21.2177%" y="351.50">si..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (3 samples, 2.42%)</title><rect x="20.9677%" y="325" width="2.4194%" height="15" fill="rgb(249,185,26)" fg:x="26" fg:w="3"/><text x="21.2177%" y="335.50">si..</text></g><g><title>simple`regex_automata::meta::strategy::new (3 samples, 2.42%)</title><rect x="20.9677%" y="309" width="2.4194%" height="15" fill="rgb(249,174,33)" fg:x="26" fg:w="3"/><text x="21.2177%" y="319.50">si..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 1.61%)</title><rect x="21.7742%" y="293" width="1.6129%" height="15" fill="rgb(233,201,37)" fg:x="27" fg:w="2"/><text x="22.0242%" y="303.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="22.5806%" y="277" width="0.8065%" height="15" fill="rgb(221,78,26)" fg:x="28" fg:w="1"/><text x="22.8306%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::nfa::Inner::into_nfa (1 samples, 0.81%)</title><rect x="22.5806%" y="261" width="0.8065%" height="15" fill="rgb(250,127,30)" fg:x="28" fg:w="1"/><text x="22.8306%" y="271.50"></text></g><g><title>simple`fancy_regex::Regex::new (7 samples, 5.65%)</title><rect x="18.5484%" y="501" width="5.6452%" height="15" fill="rgb(230,49,44)" fg:x="23" fg:w="7"/><text x="18.7984%" y="511.50">simple`..</text></g><g><title>simple`fancy_regex::Regex::new_options (7 samples, 5.65%)</title><rect x="18.5484%" y="485" width="5.6452%" height="15" fill="rgb(229,67,23)" fg:x="23" fg:w="7"/><text x="18.7984%" y="495.50">simple`..</text></g><g><title>simple`fancy_regex::compile::compile (7 samples, 5.65%)</title><rect x="18.5484%" y="469" width="5.6452%" height="15" fill="rgb(249,83,47)" fg:x="23" fg:w="7"/><text x="18.7984%" y="479.50">simple`..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (7 samples, 5.65%)</title><rect x="18.5484%" y="453" width="5.6452%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="7"/><text x="18.7984%" y="463.50">simple`..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (7 samples, 5.65%)</title><rect x="18.5484%" y="437" width="5.6452%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="7"/><text x="18.7984%" y="447.50">simple`..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (7 samples, 5.65%)</title><rect x="18.5484%" y="421" width="5.6452%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="7"/><text x="18.7984%" y="431.50">simple`..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (7 samples, 5.65%)</title><rect x="18.5484%" y="405" width="5.6452%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="7"/><text x="18.7984%" y="415.50">simple`..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="23.3871%" y="389" width="0.8065%" height="15" fill="rgb(235,30,7)" fg:x="29" fg:w="1"/><text x="23.6371%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="23.3871%" y="373" width="0.8065%" height="15" fill="rgb(250,79,13)" fg:x="29" fg:w="1"/><text x="23.6371%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="23.3871%" y="357" width="0.8065%" height="15" fill="rgb(211,146,34)" fg:x="29" fg:w="1"/><text x="23.6371%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="23.3871%" y="341" width="0.8065%" height="15" fill="rgb(228,22,38)" fg:x="29" fg:w="1"/><text x="23.6371%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="23.3871%" y="325" width="0.8065%" height="15" fill="rgb(235,168,5)" fg:x="29" fg:w="1"/><text x="23.6371%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="23.3871%" y="309" width="0.8065%" height="15" fill="rgb(221,155,16)" fg:x="29" fg:w="1"/><text x="23.6371%" y="319.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="23.3871%" y="293" width="0.8065%" height="15" fill="rgb(215,215,53)" fg:x="29" fg:w="1"/><text x="23.6371%" y="303.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="23.3871%" y="277" width="0.8065%" height="15" fill="rgb(223,4,10)" fg:x="29" fg:w="1"/><text x="23.6371%" y="287.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="23.3871%" y="261" width="0.8065%" height="15" fill="rgb(234,103,6)" fg:x="29" fg:w="1"/><text x="23.6371%" y="271.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="23.3871%" y="245" width="0.8065%" height="15" fill="rgb(227,97,0)" fg:x="29" fg:w="1"/><text x="23.6371%" y="255.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="23.3871%" y="229" width="0.8065%" height="15" fill="rgb(234,150,53)" fg:x="29" fg:w="1"/><text x="23.6371%" y="239.50"></text></g><g><title>simple`DYLD-STUB$$malloc (1 samples, 0.81%)</title><rect x="23.3871%" y="213" width="0.8065%" height="15" fill="rgb(228,201,54)" fg:x="29" fg:w="1"/><text x="23.6371%" y="223.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 3.23%)</title><rect x="24.1935%" y="485" width="3.2258%" height="15" fill="rgb(222,22,37)" fg:x="30" fg:w="4"/><text x="24.4435%" y="495.50">sim..</text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (4 samples, 3.23%)</title><rect x="24.1935%" y="469" width="3.2258%" height="15" fill="rgb(237,53,32)" fg:x="30" fg:w="4"/><text x="24.4435%" y="479.50">sim..</text></g><g><title>simple`fancy_regex::vm::run (4 samples, 3.23%)</title><rect x="24.1935%" y="453" width="3.2258%" height="15" fill="rgb(233,25,53)" fg:x="30" fg:w="4"/><text x="24.4435%" y="463.50">sim..</text></g><g><title>simple`core::ptr::drop_in_place&lt;fancy_regex::Regex&gt; (1 samples, 0.81%)</title><rect x="27.4194%" y="485" width="0.8065%" height="15" fill="rgb(210,40,34)" fg:x="34" fg:w="1"/><text x="27.6694%" y="495.50"></text></g><g><title>simple`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.81%)</title><rect x="27.4194%" y="469" width="0.8065%" height="15" fill="rgb(241,220,44)" fg:x="34" fg:w="1"/><text x="27.6694%" y="479.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe+core::marker::Send&gt;&gt;&gt; (1 samples, 0.81%)</title><rect x="27.4194%" y="453" width="0.8065%" height="15" fill="rgb(235,28,35)" fg:x="34" fg:w="1"/><text x="27.6694%" y="463.50"></text></g><g><title>simple`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.81%)</title><rect x="27.4194%" y="437" width="0.8065%" height="15" fill="rgb(210,56,17)" fg:x="34" fg:w="1"/><text x="27.6694%" y="447.50"></text></g><g><title>simple`DYLD-STUB$$free (1 samples, 0.81%)</title><rect x="27.4194%" y="421" width="0.8065%" height="15" fill="rgb(224,130,29)" fg:x="34" fg:w="1"/><text x="27.6694%" y="431.50"></text></g><g><title>simple`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.81%)</title><rect x="28.2258%" y="229" width="0.8065%" height="15" fill="rgb(235,212,8)" fg:x="35" fg:w="1"/><text x="28.4758%" y="239.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="28.2258%" y="293" width="1.6129%" height="15" fill="rgb(223,33,50)" fg:x="35" fg:w="2"/><text x="28.4758%" y="303.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="28.2258%" y="277" width="1.6129%" height="15" fill="rgb(219,149,13)" fg:x="35" fg:w="2"/><text x="28.4758%" y="287.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="28.2258%" y="261" width="1.6129%" height="15" fill="rgb(250,156,29)" fg:x="35" fg:w="2"/><text x="28.4758%" y="271.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (2 samples, 1.61%)</title><rect x="28.2258%" y="245" width="1.6129%" height="15" fill="rgb(216,193,19)" fg:x="35" fg:w="2"/><text x="28.4758%" y="255.50"></text></g><g><title>simple`core::hash::BuildHasher::hash_one (1 samples, 0.81%)</title><rect x="29.0323%" y="229" width="0.8065%" height="15" fill="rgb(216,135,14)" fg:x="36" fg:w="1"/><text x="29.2823%" y="239.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (3 samples, 2.42%)</title><rect x="28.2258%" y="373" width="2.4194%" height="15" fill="rgb(241,47,5)" fg:x="35" fg:w="3"/><text x="28.4758%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (3 samples, 2.42%)</title><rect x="28.2258%" y="357" width="2.4194%" height="15" fill="rgb(233,42,35)" fg:x="35" fg:w="3"/><text x="28.4758%" y="367.50">si..</text></g><g><title>simple`fancy_regex::compile::compile_inner (3 samples, 2.42%)</title><rect x="28.2258%" y="341" width="2.4194%" height="15" fill="rgb(231,13,6)" fg:x="35" fg:w="3"/><text x="28.4758%" y="351.50">si..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (3 samples, 2.42%)</title><rect x="28.2258%" y="325" width="2.4194%" height="15" fill="rgb(207,181,40)" fg:x="35" fg:w="3"/><text x="28.4758%" y="335.50">si..</text></g><g><title>simple`regex_automata::meta::strategy::new (3 samples, 2.42%)</title><rect x="28.2258%" y="309" width="2.4194%" height="15" fill="rgb(254,173,49)" fg:x="35" fg:w="3"/><text x="28.4758%" y="319.50">si..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="29.8387%" y="293" width="0.8065%" height="15" fill="rgb(221,1,38)" fg:x="37" fg:w="1"/><text x="30.0887%" y="303.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="29.8387%" y="277" width="0.8065%" height="15" fill="rgb(206,124,46)" fg:x="37" fg:w="1"/><text x="30.0887%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="29.8387%" y="261" width="0.8065%" height="15" fill="rgb(249,21,11)" fg:x="37" fg:w="1"/><text x="30.0887%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="29.8387%" y="245" width="0.8065%" height="15" fill="rgb(222,201,40)" fg:x="37" fg:w="1"/><text x="30.0887%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.81%)</title><rect x="29.8387%" y="229" width="0.8065%" height="15" fill="rgb(235,61,29)" fg:x="37" fg:w="1"/><text x="30.0887%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="29.8387%" y="213" width="0.8065%" height="15" fill="rgb(219,207,3)" fg:x="37" fg:w="1"/><text x="30.0887%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="29.8387%" y="197" width="0.8065%" height="15" fill="rgb(222,56,46)" fg:x="37" fg:w="1"/><text x="30.0887%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="29.8387%" y="181" width="0.8065%" height="15" fill="rgb(239,76,54)" fg:x="37" fg:w="1"/><text x="30.0887%" y="191.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="29.8387%" y="165" width="0.8065%" height="15" fill="rgb(231,124,27)" fg:x="37" fg:w="1"/><text x="30.0887%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="29.8387%" y="149" width="0.8065%" height="15" fill="rgb(249,195,6)" fg:x="37" fg:w="1"/><text x="30.0887%" y="159.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="30.6452%" y="373" width="0.8065%" height="15" fill="rgb(237,174,47)" fg:x="38" fg:w="1"/><text x="30.8952%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="30.6452%" y="357" width="0.8065%" height="15" fill="rgb(206,201,31)" fg:x="38" fg:w="1"/><text x="30.8952%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="30.6452%" y="341" width="0.8065%" height="15" fill="rgb(231,57,52)" fg:x="38" fg:w="1"/><text x="30.8952%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="30.6452%" y="325" width="0.8065%" height="15" fill="rgb(248,177,22)" fg:x="38" fg:w="1"/><text x="30.8952%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="30.6452%" y="309" width="0.8065%" height="15" fill="rgb(215,211,37)" fg:x="38" fg:w="1"/><text x="30.8952%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="30.6452%" y="293" width="0.8065%" height="15" fill="rgb(241,128,51)" fg:x="38" fg:w="1"/><text x="30.8952%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="30.6452%" y="277" width="0.8065%" height="15" fill="rgb(227,165,31)" fg:x="38" fg:w="1"/><text x="30.8952%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="30.6452%" y="261" width="0.8065%" height="15" fill="rgb(228,167,24)" fg:x="38" fg:w="1"/><text x="30.8952%" y="271.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="30.6452%" y="245" width="0.8065%" height="15" fill="rgb(228,143,12)" fg:x="38" fg:w="1"/><text x="30.8952%" y="255.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="30.6452%" y="229" width="0.8065%" height="15" fill="rgb(249,149,8)" fg:x="38" fg:w="1"/><text x="30.8952%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="30.6452%" y="213" width="0.8065%" height="15" fill="rgb(243,35,44)" fg:x="38" fg:w="1"/><text x="30.8952%" y="223.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="31.4516%" y="357" width="0.8065%" height="15" fill="rgb(246,89,9)" fg:x="39" fg:w="1"/><text x="31.7016%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="31.4516%" y="341" width="0.8065%" height="15" fill="rgb(233,213,13)" fg:x="39" fg:w="1"/><text x="31.7016%" y="351.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="31.4516%" y="325" width="0.8065%" height="15" fill="rgb(233,141,41)" fg:x="39" fg:w="1"/><text x="31.7016%" y="335.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="31.4516%" y="309" width="0.8065%" height="15" fill="rgb(239,167,4)" fg:x="39" fg:w="1"/><text x="31.7016%" y="319.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="31.4516%" y="293" width="0.8065%" height="15" fill="rgb(209,217,16)" fg:x="39" fg:w="1"/><text x="31.7016%" y="303.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="31.4516%" y="277" width="0.8065%" height="15" fill="rgb(219,88,35)" fg:x="39" fg:w="1"/><text x="31.7016%" y="287.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="31.4516%" y="261" width="0.8065%" height="15" fill="rgb(220,193,23)" fg:x="39" fg:w="1"/><text x="31.7016%" y="271.50"></text></g><g><title>simple`fancy_regex::Regex::new (6 samples, 4.84%)</title><rect x="28.2258%" y="485" width="4.8387%" height="15" fill="rgb(230,90,52)" fg:x="35" fg:w="6"/><text x="28.4758%" y="495.50">simple..</text></g><g><title>simple`fancy_regex::Regex::new_options (6 samples, 4.84%)</title><rect x="28.2258%" y="469" width="4.8387%" height="15" fill="rgb(252,106,19)" fg:x="35" fg:w="6"/><text x="28.4758%" y="479.50">simple..</text></g><g><title>simple`fancy_regex::compile::compile (6 samples, 4.84%)</title><rect x="28.2258%" y="453" width="4.8387%" height="15" fill="rgb(206,74,20)" fg:x="35" fg:w="6"/><text x="28.4758%" y="463.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="28.2258%" y="437" width="4.8387%" height="15" fill="rgb(230,138,44)" fg:x="35" fg:w="6"/><text x="28.4758%" y="447.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="28.2258%" y="421" width="4.8387%" height="15" fill="rgb(235,182,43)" fg:x="35" fg:w="6"/><text x="28.4758%" y="431.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="28.2258%" y="405" width="4.8387%" height="15" fill="rgb(242,16,51)" fg:x="35" fg:w="6"/><text x="28.4758%" y="415.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="28.2258%" y="389" width="4.8387%" height="15" fill="rgb(248,9,4)" fg:x="35" fg:w="6"/><text x="28.4758%" y="399.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="31.4516%" y="373" width="1.6129%" height="15" fill="rgb(210,31,22)" fg:x="39" fg:w="2"/><text x="31.7016%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="32.2581%" y="357" width="0.8065%" height="15" fill="rgb(239,54,39)" fg:x="40" fg:w="1"/><text x="32.5081%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="32.2581%" y="341" width="0.8065%" height="15" fill="rgb(230,99,41)" fg:x="40" fg:w="1"/><text x="32.5081%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="32.2581%" y="325" width="0.8065%" height="15" fill="rgb(253,106,12)" fg:x="40" fg:w="1"/><text x="32.5081%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="32.2581%" y="309" width="0.8065%" height="15" fill="rgb(213,46,41)" fg:x="40" fg:w="1"/><text x="32.5081%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="32.2581%" y="293" width="0.8065%" height="15" fill="rgb(215,133,35)" fg:x="40" fg:w="1"/><text x="32.5081%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="32.2581%" y="277" width="0.8065%" height="15" fill="rgb(213,28,5)" fg:x="40" fg:w="1"/><text x="32.5081%" y="287.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="32.2581%" y="261" width="0.8065%" height="15" fill="rgb(215,77,49)" fg:x="40" fg:w="1"/><text x="32.5081%" y="271.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="32.2581%" y="245" width="0.8065%" height="15" fill="rgb(248,100,22)" fg:x="40" fg:w="1"/><text x="32.5081%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="32.2581%" y="229" width="0.8065%" height="15" fill="rgb(208,67,9)" fg:x="40" fg:w="1"/><text x="32.5081%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="32.2581%" y="213" width="0.8065%" height="15" fill="rgb(219,133,21)" fg:x="40" fg:w="1"/><text x="32.5081%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.81%)</title><rect x="32.2581%" y="197" width="0.8065%" height="15" fill="rgb(246,46,29)" fg:x="40" fg:w="1"/><text x="32.5081%" y="207.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 4.03%)</title><rect x="33.0645%" y="469" width="4.0323%" height="15" fill="rgb(246,185,52)" fg:x="41" fg:w="5"/><text x="33.3145%" y="479.50">simp..</text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (5 samples, 4.03%)</title><rect x="33.0645%" y="453" width="4.0323%" height="15" fill="rgb(252,136,11)" fg:x="41" fg:w="5"/><text x="33.3145%" y="463.50">simp..</text></g><g><title>simple`fancy_regex::vm::run (5 samples, 4.03%)</title><rect x="33.0645%" y="437" width="4.0323%" height="15" fill="rgb(219,138,53)" fg:x="41" fg:w="5"/><text x="33.3145%" y="447.50">simp..</text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="37.0968%" y="229" width="0.8065%" height="15" fill="rgb(211,51,23)" fg:x="46" fg:w="1"/><text x="37.3468%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="37.9032%" y="229" width="0.8065%" height="15" fill="rgb(247,221,28)" fg:x="47" fg:w="1"/><text x="38.1532%" y="239.50"></text></g><g><title>simple`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.81%)</title><rect x="37.9032%" y="213" width="0.8065%" height="15" fill="rgb(251,222,45)" fg:x="47" fg:w="1"/><text x="38.1532%" y="223.50"></text></g><g><title>simple`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.81%)</title><rect x="37.9032%" y="197" width="0.8065%" height="15" fill="rgb(217,162,53)" fg:x="47" fg:w="1"/><text x="38.1532%" y="207.50"></text></g><g><title>simple`regex_automata::util::determinize::add_nfa_states (1 samples, 0.81%)</title><rect x="40.3226%" y="213" width="0.8065%" height="15" fill="rgb(229,93,14)" fg:x="50" fg:w="1"/><text x="40.5726%" y="223.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (6 samples, 4.84%)</title><rect x="37.0968%" y="277" width="4.8387%" height="15" fill="rgb(209,67,49)" fg:x="46" fg:w="6"/><text x="37.3468%" y="287.50">simple..</text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (6 samples, 4.84%)</title><rect x="37.0968%" y="261" width="4.8387%" height="15" fill="rgb(213,87,29)" fg:x="46" fg:w="6"/><text x="37.3468%" y="271.50">simple..</text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (6 samples, 4.84%)</title><rect x="37.0968%" y="245" width="4.8387%" height="15" fill="rgb(205,151,52)" fg:x="46" fg:w="6"/><text x="37.3468%" y="255.50">simple..</text></g><g><title>simple`regex_automata::util::determinize::next (4 samples, 3.23%)</title><rect x="38.7097%" y="229" width="3.2258%" height="15" fill="rgb(253,215,39)" fg:x="48" fg:w="4"/><text x="38.9597%" y="239.50">sim..</text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="41.1290%" y="213" width="0.8065%" height="15" fill="rgb(221,220,41)" fg:x="51" fg:w="1"/><text x="41.3790%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="41.9355%" y="213" width="0.8065%" height="15" fill="rgb(218,133,21)" fg:x="52" fg:w="1"/><text x="42.1855%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.81%)</title><rect x="41.9355%" y="197" width="0.8065%" height="15" fill="rgb(221,193,43)" fg:x="52" fg:w="1"/><text x="42.1855%" y="207.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="41.9355%" y="181" width="0.8065%" height="15" fill="rgb(240,128,52)" fg:x="52" fg:w="1"/><text x="42.1855%" y="191.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="41.9355%" y="165" width="0.8065%" height="15" fill="rgb(253,114,12)" fg:x="52" fg:w="1"/><text x="42.1855%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="41.9355%" y="149" width="0.8065%" height="15" fill="rgb(215,223,47)" fg:x="52" fg:w="1"/><text x="42.1855%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="41.9355%" y="133" width="0.8065%" height="15" fill="rgb(248,225,23)" fg:x="52" fg:w="1"/><text x="42.1855%" y="143.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (8 samples, 6.45%)</title><rect x="37.0968%" y="357" width="6.4516%" height="15" fill="rgb(250,108,0)" fg:x="46" fg:w="8"/><text x="37.3468%" y="367.50">simple`f..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (8 samples, 6.45%)</title><rect x="37.0968%" y="341" width="6.4516%" height="15" fill="rgb(228,208,7)" fg:x="46" fg:w="8"/><text x="37.3468%" y="351.50">simple`f..</text></g><g><title>simple`fancy_regex::compile::compile_inner (8 samples, 6.45%)</title><rect x="37.0968%" y="325" width="6.4516%" height="15" fill="rgb(244,45,10)" fg:x="46" fg:w="8"/><text x="37.3468%" y="335.50">simple`f..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (8 samples, 6.45%)</title><rect x="37.0968%" y="309" width="6.4516%" height="15" fill="rgb(207,125,25)" fg:x="46" fg:w="8"/><text x="37.3468%" y="319.50">simple`r..</text></g><g><title>simple`regex_automata::meta::strategy::new (8 samples, 6.45%)</title><rect x="37.0968%" y="293" width="6.4516%" height="15" fill="rgb(210,195,18)" fg:x="46" fg:w="8"/><text x="37.3468%" y="303.50">simple`r..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 1.61%)</title><rect x="41.9355%" y="277" width="1.6129%" height="15" fill="rgb(249,80,12)" fg:x="52" fg:w="2"/><text x="42.1855%" y="287.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="41.9355%" y="261" width="1.6129%" height="15" fill="rgb(221,65,9)" fg:x="52" fg:w="2"/><text x="42.1855%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 1.61%)</title><rect x="41.9355%" y="245" width="1.6129%" height="15" fill="rgb(235,49,36)" fg:x="52" fg:w="2"/><text x="42.1855%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 1.61%)</title><rect x="41.9355%" y="229" width="1.6129%" height="15" fill="rgb(225,32,20)" fg:x="52" fg:w="2"/><text x="42.1855%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.81%)</title><rect x="42.7419%" y="213" width="0.8065%" height="15" fill="rgb(215,141,46)" fg:x="53" fg:w="1"/><text x="42.9919%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="42.7419%" y="197" width="0.8065%" height="15" fill="rgb(250,160,47)" fg:x="53" fg:w="1"/><text x="42.9919%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="42.7419%" y="181" width="0.8065%" height="15" fill="rgb(216,222,40)" fg:x="53" fg:w="1"/><text x="42.9919%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="42.7419%" y="165" width="0.8065%" height="15" fill="rgb(234,217,39)" fg:x="53" fg:w="1"/><text x="42.9919%" y="175.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="42.7419%" y="149" width="0.8065%" height="15" fill="rgb(207,178,40)" fg:x="53" fg:w="1"/><text x="42.9919%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="42.7419%" y="133" width="0.8065%" height="15" fill="rgb(221,136,13)" fg:x="53" fg:w="1"/><text x="42.9919%" y="143.50"></text></g><g><title>simple`regex_automata::dfa::dense::DFA&lt;alloc::vec::Vec&lt;u32&gt;&gt;::set_transition (2 samples, 1.61%)</title><rect x="43.5484%" y="213" width="1.6129%" height="15" fill="rgb(249,199,10)" fg:x="54" fg:w="2"/><text x="43.7984%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="45.1613%" y="213" width="0.8065%" height="15" fill="rgb(249,222,13)" fg:x="56" fg:w="1"/><text x="45.4113%" y="223.50"></text></g><g><title>simple`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.81%)</title><rect x="45.1613%" y="197" width="0.8065%" height="15" fill="rgb(244,185,38)" fg:x="56" fg:w="1"/><text x="45.4113%" y="207.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (4 samples, 3.23%)</title><rect x="43.5484%" y="261" width="3.2258%" height="15" fill="rgb(236,202,9)" fg:x="54" fg:w="4"/><text x="43.7984%" y="271.50">sim..</text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (4 samples, 3.23%)</title><rect x="43.5484%" y="245" width="3.2258%" height="15" fill="rgb(250,229,37)" fg:x="54" fg:w="4"/><text x="43.7984%" y="255.50">sim..</text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (4 samples, 3.23%)</title><rect x="43.5484%" y="229" width="3.2258%" height="15" fill="rgb(206,174,23)" fg:x="54" fg:w="4"/><text x="43.7984%" y="239.50">sim..</text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="45.9677%" y="213" width="0.8065%" height="15" fill="rgb(211,33,43)" fg:x="57" fg:w="1"/><text x="46.2177%" y="223.50"></text></g><g><title>simple`regex_automata::util::determinize::add_nfa_states (1 samples, 0.81%)</title><rect x="45.9677%" y="197" width="0.8065%" height="15" fill="rgb(245,58,50)" fg:x="57" fg:w="1"/><text x="46.2177%" y="207.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (5 samples, 4.03%)</title><rect x="43.5484%" y="325" width="4.0323%" height="15" fill="rgb(244,68,36)" fg:x="54" fg:w="5"/><text x="43.7984%" y="335.50">simp..</text></g><g><title>simple`fancy_regex::compile::compile_inner (5 samples, 4.03%)</title><rect x="43.5484%" y="309" width="4.0323%" height="15" fill="rgb(232,229,15)" fg:x="54" fg:w="5"/><text x="43.7984%" y="319.50">simp..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (5 samples, 4.03%)</title><rect x="43.5484%" y="293" width="4.0323%" height="15" fill="rgb(254,30,23)" fg:x="54" fg:w="5"/><text x="43.7984%" y="303.50">simp..</text></g><g><title>simple`regex_automata::meta::strategy::new (5 samples, 4.03%)</title><rect x="43.5484%" y="277" width="4.0323%" height="15" fill="rgb(235,160,14)" fg:x="54" fg:w="5"/><text x="43.7984%" y="287.50">simp..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="46.7742%" y="261" width="0.8065%" height="15" fill="rgb(212,155,44)" fg:x="58" fg:w="1"/><text x="47.0242%" y="271.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="46.7742%" y="245" width="0.8065%" height="15" fill="rgb(226,2,50)" fg:x="58" fg:w="1"/><text x="47.0242%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="46.7742%" y="229" width="0.8065%" height="15" fill="rgb(234,177,6)" fg:x="58" fg:w="1"/><text x="47.0242%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="46.7742%" y="213" width="0.8065%" height="15" fill="rgb(217,24,9)" fg:x="58" fg:w="1"/><text x="47.0242%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="46.7742%" y="197" width="0.8065%" height="15" fill="rgb(220,13,46)" fg:x="58" fg:w="1"/><text x="47.0242%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="46.7742%" y="181" width="0.8065%" height="15" fill="rgb(239,221,27)" fg:x="58" fg:w="1"/><text x="47.0242%" y="191.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="46.7742%" y="165" width="0.8065%" height="15" fill="rgb(222,198,25)" fg:x="58" fg:w="1"/><text x="47.0242%" y="175.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="46.7742%" y="149" width="0.8065%" height="15" fill="rgb(211,99,13)" fg:x="58" fg:w="1"/><text x="47.0242%" y="159.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="47.5806%" y="149" width="0.8065%" height="15" fill="rgb(232,111,31)" fg:x="59" fg:w="1"/><text x="47.8306%" y="159.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="47.5806%" y="197" width="1.6129%" height="15" fill="rgb(245,82,37)" fg:x="59" fg:w="2"/><text x="47.8306%" y="207.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="47.5806%" y="181" width="1.6129%" height="15" fill="rgb(227,149,46)" fg:x="59" fg:w="2"/><text x="47.8306%" y="191.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="47.5806%" y="165" width="1.6129%" height="15" fill="rgb(218,36,50)" fg:x="59" fg:w="2"/><text x="47.8306%" y="175.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="48.3871%" y="149" width="0.8065%" height="15" fill="rgb(226,80,48)" fg:x="60" fg:w="1"/><text x="48.6371%" y="159.50"></text></g><g><title>simple`regex_automata::util::determinize::state::State::iter_nfa_state_ids (1 samples, 0.81%)</title><rect x="48.3871%" y="133" width="0.8065%" height="15" fill="rgb(238,224,15)" fg:x="60" fg:w="1"/><text x="48.6371%" y="143.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (9 samples, 7.26%)</title><rect x="43.5484%" y="357" width="7.2581%" height="15" fill="rgb(241,136,10)" fg:x="54" fg:w="9"/><text x="43.7984%" y="367.50">simple`fan..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (9 samples, 7.26%)</title><rect x="43.5484%" y="341" width="7.2581%" height="15" fill="rgb(208,32,45)" fg:x="54" fg:w="9"/><text x="43.7984%" y="351.50">simple`fan..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="47.5806%" y="325" width="3.2258%" height="15" fill="rgb(207,135,9)" fg:x="59" fg:w="4"/><text x="47.8306%" y="335.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="47.5806%" y="309" width="3.2258%" height="15" fill="rgb(206,86,44)" fg:x="59" fg:w="4"/><text x="47.8306%" y="319.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (4 samples, 3.23%)</title><rect x="47.5806%" y="293" width="3.2258%" height="15" fill="rgb(245,177,15)" fg:x="59" fg:w="4"/><text x="47.8306%" y="303.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="47.5806%" y="277" width="3.2258%" height="15" fill="rgb(206,64,50)" fg:x="59" fg:w="4"/><text x="47.8306%" y="287.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (4 samples, 3.23%)</title><rect x="47.5806%" y="261" width="3.2258%" height="15" fill="rgb(234,36,40)" fg:x="59" fg:w="4"/><text x="47.8306%" y="271.50">sim..</text></g><g><title>simple`fancy_regex::compile::compile_inner (4 samples, 3.23%)</title><rect x="47.5806%" y="245" width="3.2258%" height="15" fill="rgb(213,64,8)" fg:x="59" fg:w="4"/><text x="47.8306%" y="255.50">sim..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (4 samples, 3.23%)</title><rect x="47.5806%" y="229" width="3.2258%" height="15" fill="rgb(210,75,36)" fg:x="59" fg:w="4"/><text x="47.8306%" y="239.50">sim..</text></g><g><title>simple`regex_automata::meta::strategy::new (4 samples, 3.23%)</title><rect x="47.5806%" y="213" width="3.2258%" height="15" fill="rgb(229,88,21)" fg:x="59" fg:w="4"/><text x="47.8306%" y="223.50">sim..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 1.61%)</title><rect x="49.1935%" y="197" width="1.6129%" height="15" fill="rgb(252,204,47)" fg:x="61" fg:w="2"/><text x="49.4435%" y="207.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="49.1935%" y="181" width="1.6129%" height="15" fill="rgb(208,77,27)" fg:x="61" fg:w="2"/><text x="49.4435%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 1.61%)</title><rect x="49.1935%" y="165" width="1.6129%" height="15" fill="rgb(221,76,26)" fg:x="61" fg:w="2"/><text x="49.4435%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 1.61%)</title><rect x="49.1935%" y="149" width="1.6129%" height="15" fill="rgb(225,139,18)" fg:x="61" fg:w="2"/><text x="49.4435%" y="159.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (2 samples, 1.61%)</title><rect x="49.1935%" y="133" width="1.6129%" height="15" fill="rgb(230,137,11)" fg:x="61" fg:w="2"/><text x="49.4435%" y="143.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (2 samples, 1.61%)</title><rect x="49.1935%" y="117" width="1.6129%" height="15" fill="rgb(212,28,1)" fg:x="61" fg:w="2"/><text x="49.4435%" y="127.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 1.61%)</title><rect x="49.1935%" y="101" width="1.6129%" height="15" fill="rgb(248,164,17)" fg:x="61" fg:w="2"/><text x="49.4435%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 1.61%)</title><rect x="49.1935%" y="85" width="1.6129%" height="15" fill="rgb(222,171,42)" fg:x="61" fg:w="2"/><text x="49.4435%" y="95.50"></text></g><g><title>simple`simple::utils::page (23 samples, 18.55%)</title><rect x="33.0645%" y="485" width="18.5484%" height="15" fill="rgb(243,84,45)" fg:x="41" fg:w="23"/><text x="33.3145%" y="495.50">simple`simple::utils::page</text></g><g><title>simple`fancy_regex::Regex::new (18 samples, 14.52%)</title><rect x="37.0968%" y="469" width="14.5161%" height="15" fill="rgb(252,49,23)" fg:x="46" fg:w="18"/><text x="37.3468%" y="479.50">simple`fancy_regex::Re..</text></g><g><title>simple`fancy_regex::Regex::new_options (18 samples, 14.52%)</title><rect x="37.0968%" y="453" width="14.5161%" height="15" fill="rgb(215,19,7)" fg:x="46" fg:w="18"/><text x="37.3468%" y="463.50">simple`fancy_regex::Re..</text></g><g><title>simple`fancy_regex::compile::compile (18 samples, 14.52%)</title><rect x="37.0968%" y="437" width="14.5161%" height="15" fill="rgb(238,81,41)" fg:x="46" fg:w="18"/><text x="37.3468%" y="447.50">simple`fancy_regex::co..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (18 samples, 14.52%)</title><rect x="37.0968%" y="421" width="14.5161%" height="15" fill="rgb(210,199,37)" fg:x="46" fg:w="18"/><text x="37.3468%" y="431.50">simple`fancy_regex::co..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (18 samples, 14.52%)</title><rect x="37.0968%" y="405" width="14.5161%" height="15" fill="rgb(244,192,49)" fg:x="46" fg:w="18"/><text x="37.3468%" y="415.50">simple`fancy_regex::co..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (18 samples, 14.52%)</title><rect x="37.0968%" y="389" width="14.5161%" height="15" fill="rgb(226,211,11)" fg:x="46" fg:w="18"/><text x="37.3468%" y="399.50">simple`fancy_regex::co..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (18 samples, 14.52%)</title><rect x="37.0968%" y="373" width="14.5161%" height="15" fill="rgb(236,162,54)" fg:x="46" fg:w="18"/><text x="37.3468%" y="383.50">simple`fancy_regex::co..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="357" width="0.8065%" height="15" fill="rgb(220,229,9)" fg:x="63" fg:w="1"/><text x="51.0565%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="341" width="0.8065%" height="15" fill="rgb(250,87,22)" fg:x="63" fg:w="1"/><text x="51.0565%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="50.8065%" y="325" width="0.8065%" height="15" fill="rgb(239,43,17)" fg:x="63" fg:w="1"/><text x="51.0565%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="309" width="0.8065%" height="15" fill="rgb(231,177,25)" fg:x="63" fg:w="1"/><text x="51.0565%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="293" width="0.8065%" height="15" fill="rgb(219,179,1)" fg:x="63" fg:w="1"/><text x="51.0565%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="277" width="0.8065%" height="15" fill="rgb(238,219,53)" fg:x="63" fg:w="1"/><text x="51.0565%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="50.8065%" y="261" width="0.8065%" height="15" fill="rgb(232,167,36)" fg:x="63" fg:w="1"/><text x="51.0565%" y="271.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="245" width="0.8065%" height="15" fill="rgb(244,19,51)" fg:x="63" fg:w="1"/><text x="51.0565%" y="255.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="50.8065%" y="229" width="0.8065%" height="15" fill="rgb(224,6,22)" fg:x="63" fg:w="1"/><text x="51.0565%" y="239.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="50.8065%" y="213" width="0.8065%" height="15" fill="rgb(224,145,5)" fg:x="63" fg:w="1"/><text x="51.0565%" y="223.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="50.8065%" y="197" width="0.8065%" height="15" fill="rgb(234,130,49)" fg:x="63" fg:w="1"/><text x="51.0565%" y="207.50"></text></g><g><title>simple`regex_syntax::hir::translate::Translator::translate (1 samples, 0.81%)</title><rect x="50.8065%" y="181" width="0.8065%" height="15" fill="rgb(254,6,2)" fg:x="63" fg:w="1"/><text x="51.0565%" y="191.50"></text></g><g><title>simple`regex_syntax::ast::visitor::visit (1 samples, 0.81%)</title><rect x="50.8065%" y="165" width="0.8065%" height="15" fill="rgb(208,96,46)" fg:x="63" fg:w="1"/><text x="51.0565%" y="175.50"></text></g><g><title>simple`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.81%)</title><rect x="50.8065%" y="149" width="0.8065%" height="15" fill="rgb(239,3,39)" fg:x="63" fg:w="1"/><text x="51.0565%" y="159.50"></text></g><g><title>simple`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.81%)</title><rect x="50.8065%" y="133" width="0.8065%" height="15" fill="rgb(233,210,1)" fg:x="63" fg:w="1"/><text x="51.0565%" y="143.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="50.8065%" y="117" width="0.8065%" height="15" fill="rgb(244,137,37)" fg:x="63" fg:w="1"/><text x="51.0565%" y="127.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="50.8065%" y="101" width="0.8065%" height="15" fill="rgb(240,136,2)" fg:x="63" fg:w="1"/><text x="51.0565%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="50.8065%" y="85" width="0.8065%" height="15" fill="rgb(239,18,37)" fg:x="63" fg:w="1"/><text x="51.0565%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="50.8065%" y="69" width="0.8065%" height="15" fill="rgb(218,185,22)" fg:x="63" fg:w="1"/><text x="51.0565%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.81%)</title><rect x="50.8065%" y="53" width="0.8065%" height="15" fill="rgb(225,218,4)" fg:x="63" fg:w="1"/><text x="51.0565%" y="63.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.81%)</title><rect x="51.6129%" y="245" width="0.8065%" height="15" fill="rgb(230,182,32)" fg:x="64" fg:w="1"/><text x="51.8629%" y="255.50"></text></g><g><title>simple`simple::utils::page (36 samples, 29.03%)</title><rect x="24.1935%" y="501" width="29.0323%" height="15" fill="rgb(242,56,43)" fg:x="30" fg:w="36"/><text x="24.4435%" y="511.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::targets_kv (2 samples, 1.61%)</title><rect x="51.6129%" y="485" width="1.6129%" height="15" fill="rgb(233,99,24)" fg:x="64" fg:w="2"/><text x="51.8629%" y="495.50"></text></g><g><title>simple`fancy_regex::Regex::new (2 samples, 1.61%)</title><rect x="51.6129%" y="469" width="1.6129%" height="15" fill="rgb(234,209,42)" fg:x="64" fg:w="2"/><text x="51.8629%" y="479.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (2 samples, 1.61%)</title><rect x="51.6129%" y="453" width="1.6129%" height="15" fill="rgb(227,7,12)" fg:x="64" fg:w="2"/><text x="51.8629%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::compile (2 samples, 1.61%)</title><rect x="51.6129%" y="437" width="1.6129%" height="15" fill="rgb(245,203,43)" fg:x="64" fg:w="2"/><text x="51.8629%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="421" width="1.6129%" height="15" fill="rgb(238,205,33)" fg:x="64" fg:w="2"/><text x="51.8629%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="405" width="1.6129%" height="15" fill="rgb(231,56,7)" fg:x="64" fg:w="2"/><text x="51.8629%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="389" width="1.6129%" height="15" fill="rgb(244,186,29)" fg:x="64" fg:w="2"/><text x="51.8629%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="373" width="1.6129%" height="15" fill="rgb(234,111,31)" fg:x="64" fg:w="2"/><text x="51.8629%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="357" width="1.6129%" height="15" fill="rgb(241,149,10)" fg:x="64" fg:w="2"/><text x="51.8629%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="51.6129%" y="341" width="1.6129%" height="15" fill="rgb(249,206,44)" fg:x="64" fg:w="2"/><text x="51.8629%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="51.6129%" y="325" width="1.6129%" height="15" fill="rgb(251,153,30)" fg:x="64" fg:w="2"/><text x="51.8629%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="51.6129%" y="309" width="1.6129%" height="15" fill="rgb(239,152,38)" fg:x="64" fg:w="2"/><text x="51.8629%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="51.6129%" y="293" width="1.6129%" height="15" fill="rgb(249,139,47)" fg:x="64" fg:w="2"/><text x="51.8629%" y="303.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="51.6129%" y="277" width="1.6129%" height="15" fill="rgb(244,64,35)" fg:x="64" fg:w="2"/><text x="51.8629%" y="287.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="51.6129%" y="261" width="1.6129%" height="15" fill="rgb(216,46,15)" fg:x="64" fg:w="2"/><text x="51.8629%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="52.4194%" y="245" width="0.8065%" height="15" fill="rgb(250,74,19)" fg:x="65" fg:w="1"/><text x="52.6694%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="52.4194%" y="229" width="0.8065%" height="15" fill="rgb(249,42,33)" fg:x="65" fg:w="1"/><text x="52.6694%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::nfa::Inner::into_nfa (1 samples, 0.81%)</title><rect x="52.4194%" y="213" width="0.8065%" height="15" fill="rgb(242,149,17)" fg:x="65" fg:w="1"/><text x="52.6694%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.81%)</title><rect x="52.4194%" y="197" width="0.8065%" height="15" fill="rgb(244,29,21)" fg:x="65" fg:w="1"/><text x="52.6694%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.81%)</title><rect x="52.4194%" y="181" width="0.8065%" height="15" fill="rgb(220,130,37)" fg:x="65" fg:w="1"/><text x="52.6694%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.81%)</title><rect x="52.4194%" y="165" width="0.8065%" height="15" fill="rgb(211,67,2)" fg:x="65" fg:w="1"/><text x="52.6694%" y="175.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="53.2258%" y="357" width="0.8065%" height="15" fill="rgb(235,68,52)" fg:x="66" fg:w="1"/><text x="53.4758%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="53.2258%" y="341" width="0.8065%" height="15" fill="rgb(246,142,3)" fg:x="66" fg:w="1"/><text x="53.4758%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="53.2258%" y="325" width="0.8065%" height="15" fill="rgb(241,25,7)" fg:x="66" fg:w="1"/><text x="53.4758%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="53.2258%" y="309" width="0.8065%" height="15" fill="rgb(242,119,39)" fg:x="66" fg:w="1"/><text x="53.4758%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="53.2258%" y="293" width="0.8065%" height="15" fill="rgb(241,98,45)" fg:x="66" fg:w="1"/><text x="53.4758%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="53.2258%" y="277" width="0.8065%" height="15" fill="rgb(254,28,30)" fg:x="66" fg:w="1"/><text x="53.4758%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="53.2258%" y="261" width="0.8065%" height="15" fill="rgb(241,142,54)" fg:x="66" fg:w="1"/><text x="53.4758%" y="271.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="53.2258%" y="245" width="0.8065%" height="15" fill="rgb(222,85,15)" fg:x="66" fg:w="1"/><text x="53.4758%" y="255.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="53.2258%" y="229" width="0.8065%" height="15" fill="rgb(210,85,47)" fg:x="66" fg:w="1"/><text x="53.4758%" y="239.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="53.2258%" y="213" width="0.8065%" height="15" fill="rgb(224,206,25)" fg:x="66" fg:w="1"/><text x="53.4758%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="53.2258%" y="197" width="0.8065%" height="15" fill="rgb(243,201,19)" fg:x="66" fg:w="1"/><text x="53.4758%" y="207.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="53.2258%" y="181" width="0.8065%" height="15" fill="rgb(236,59,4)" fg:x="66" fg:w="1"/><text x="53.4758%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="53.2258%" y="165" width="0.8065%" height="15" fill="rgb(254,179,45)" fg:x="66" fg:w="1"/><text x="53.4758%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="53.2258%" y="149" width="0.8065%" height="15" fill="rgb(226,14,10)" fg:x="66" fg:w="1"/><text x="53.4758%" y="159.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="53.2258%" y="133" width="0.8065%" height="15" fill="rgb(244,27,41)" fg:x="66" fg:w="1"/><text x="53.4758%" y="143.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="53.2258%" y="117" width="0.8065%" height="15" fill="rgb(235,35,32)" fg:x="66" fg:w="1"/><text x="53.4758%" y="127.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="53.2258%" y="101" width="0.8065%" height="15" fill="rgb(218,68,31)" fg:x="66" fg:w="1"/><text x="53.4758%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="53.2258%" y="85" width="0.8065%" height="15" fill="rgb(207,120,37)" fg:x="66" fg:w="1"/><text x="53.4758%" y="95.50"></text></g><g><title>simple`simple::utils::sub_component_slot (2 samples, 1.61%)</title><rect x="53.2258%" y="501" width="1.6129%" height="15" fill="rgb(227,98,0)" fg:x="66" fg:w="2"/><text x="53.4758%" y="511.50"></text></g><g><title>simple`simple::utils::page (2 samples, 1.61%)</title><rect x="53.2258%" y="485" width="1.6129%" height="15" fill="rgb(207,7,3)" fg:x="66" fg:w="2"/><text x="53.4758%" y="495.50"></text></g><g><title>simple`fancy_regex::Regex::new (2 samples, 1.61%)</title><rect x="53.2258%" y="469" width="1.6129%" height="15" fill="rgb(206,98,19)" fg:x="66" fg:w="2"/><text x="53.4758%" y="479.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (2 samples, 1.61%)</title><rect x="53.2258%" y="453" width="1.6129%" height="15" fill="rgb(217,5,26)" fg:x="66" fg:w="2"/><text x="53.4758%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::compile (2 samples, 1.61%)</title><rect x="53.2258%" y="437" width="1.6129%" height="15" fill="rgb(235,190,38)" fg:x="66" fg:w="2"/><text x="53.4758%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="53.2258%" y="421" width="1.6129%" height="15" fill="rgb(247,86,24)" fg:x="66" fg:w="2"/><text x="53.4758%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="53.2258%" y="405" width="1.6129%" height="15" fill="rgb(205,101,16)" fg:x="66" fg:w="2"/><text x="53.4758%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="53.2258%" y="389" width="1.6129%" height="15" fill="rgb(246,168,33)" fg:x="66" fg:w="2"/><text x="53.4758%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="53.2258%" y="373" width="1.6129%" height="15" fill="rgb(231,114,1)" fg:x="66" fg:w="2"/><text x="53.4758%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="54.0323%" y="357" width="0.8065%" height="15" fill="rgb(207,184,53)" fg:x="67" fg:w="1"/><text x="54.2823%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="54.0323%" y="341" width="0.8065%" height="15" fill="rgb(224,95,51)" fg:x="67" fg:w="1"/><text x="54.2823%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="54.0323%" y="325" width="0.8065%" height="15" fill="rgb(212,188,45)" fg:x="67" fg:w="1"/><text x="54.2823%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="54.0323%" y="309" width="0.8065%" height="15" fill="rgb(223,154,38)" fg:x="67" fg:w="1"/><text x="54.2823%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="54.0323%" y="293" width="0.8065%" height="15" fill="rgb(251,22,52)" fg:x="67" fg:w="1"/><text x="54.2823%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="54.0323%" y="277" width="0.8065%" height="15" fill="rgb(229,209,22)" fg:x="67" fg:w="1"/><text x="54.2823%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="54.0323%" y="261" width="0.8065%" height="15" fill="rgb(234,138,34)" fg:x="67" fg:w="1"/><text x="54.2823%" y="271.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="54.0323%" y="245" width="0.8065%" height="15" fill="rgb(212,95,11)" fg:x="67" fg:w="1"/><text x="54.2823%" y="255.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="54.0323%" y="229" width="0.8065%" height="15" fill="rgb(240,179,47)" fg:x="67" fg:w="1"/><text x="54.2823%" y="239.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="54.0323%" y="213" width="0.8065%" height="15" fill="rgb(240,163,11)" fg:x="67" fg:w="1"/><text x="54.2823%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="54.0323%" y="197" width="0.8065%" height="15" fill="rgb(236,37,12)" fg:x="67" fg:w="1"/><text x="54.2823%" y="207.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="54.0323%" y="181" width="0.8065%" height="15" fill="rgb(232,164,16)" fg:x="67" fg:w="1"/><text x="54.2823%" y="191.50"></text></g><g><title>simple`core::hash::BuildHasher::hash_one (1 samples, 0.81%)</title><rect x="54.0323%" y="165" width="0.8065%" height="15" fill="rgb(244,205,15)" fg:x="67" fg:w="1"/><text x="54.2823%" y="175.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (2 samples, 1.61%)</title><rect x="54.8387%" y="261" width="1.6129%" height="15" fill="rgb(223,117,47)" fg:x="68" fg:w="2"/><text x="55.0887%" y="271.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (2 samples, 1.61%)</title><rect x="54.8387%" y="245" width="1.6129%" height="15" fill="rgb(244,107,35)" fg:x="68" fg:w="2"/><text x="55.0887%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.81%)</title><rect x="55.6452%" y="229" width="0.8065%" height="15" fill="rgb(205,140,8)" fg:x="69" fg:w="1"/><text x="55.8952%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::add (1 samples, 0.81%)</title><rect x="56.4516%" y="197" width="0.8065%" height="15" fill="rgb(228,84,46)" fg:x="70" fg:w="1"/><text x="56.7016%" y="207.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="56.4516%" y="245" width="1.6129%" height="15" fill="rgb(254,188,9)" fg:x="70" fg:w="2"/><text x="56.7016%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 1.61%)</title><rect x="56.4516%" y="229" width="1.6129%" height="15" fill="rgb(206,112,54)" fg:x="70" fg:w="2"/><text x="56.7016%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 1.61%)</title><rect x="56.4516%" y="213" width="1.6129%" height="15" fill="rgb(216,84,49)" fg:x="70" fg:w="2"/><text x="56.7016%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="57.2581%" y="197" width="0.8065%" height="15" fill="rgb(214,194,35)" fg:x="71" fg:w="1"/><text x="57.5081%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="57.2581%" y="181" width="0.8065%" height="15" fill="rgb(249,28,3)" fg:x="71" fg:w="1"/><text x="57.5081%" y="191.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="57.2581%" y="165" width="0.8065%" height="15" fill="rgb(222,56,52)" fg:x="71" fg:w="1"/><text x="57.5081%" y="175.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="57.2581%" y="149" width="0.8065%" height="15" fill="rgb(245,217,50)" fg:x="71" fg:w="1"/><text x="57.5081%" y="159.50"></text></g><g><title>simple`simple::utils::page (69 samples, 55.65%)</title><rect x="3.2258%" y="549" width="55.6452%" height="15" fill="rgb(213,201,24)" fg:x="4" fg:w="69"/><text x="3.4758%" y="559.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::sub_component_slot (57 samples, 45.97%)</title><rect x="12.9032%" y="533" width="45.9677%" height="15" fill="rgb(248,116,28)" fg:x="16" fg:w="57"/><text x="13.1532%" y="543.50">simple`simple::utils::sub_component_slot</text></g><g><title>simple`simple::utils::page (57 samples, 45.97%)</title><rect x="12.9032%" y="517" width="45.9677%" height="15" fill="rgb(219,72,43)" fg:x="16" fg:w="57"/><text x="13.1532%" y="527.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::targets_kv (5 samples, 4.03%)</title><rect x="54.8387%" y="501" width="4.0323%" height="15" fill="rgb(209,138,14)" fg:x="68" fg:w="5"/><text x="55.0887%" y="511.50">simp..</text></g><g><title>simple`fancy_regex::Regex::new (5 samples, 4.03%)</title><rect x="54.8387%" y="485" width="4.0323%" height="15" fill="rgb(222,18,33)" fg:x="68" fg:w="5"/><text x="55.0887%" y="495.50">simp..</text></g><g><title>simple`fancy_regex::Regex::new_options (5 samples, 4.03%)</title><rect x="54.8387%" y="469" width="4.0323%" height="15" fill="rgb(213,199,7)" fg:x="68" fg:w="5"/><text x="55.0887%" y="479.50">simp..</text></g><g><title>simple`fancy_regex::compile::compile (5 samples, 4.03%)</title><rect x="54.8387%" y="453" width="4.0323%" height="15" fill="rgb(250,110,10)" fg:x="68" fg:w="5"/><text x="55.0887%" y="463.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="437" width="4.0323%" height="15" fill="rgb(248,123,6)" fg:x="68" fg:w="5"/><text x="55.0887%" y="447.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="421" width="4.0323%" height="15" fill="rgb(206,91,31)" fg:x="68" fg:w="5"/><text x="55.0887%" y="431.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="405" width="4.0323%" height="15" fill="rgb(211,154,13)" fg:x="68" fg:w="5"/><text x="55.0887%" y="415.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="389" width="4.0323%" height="15" fill="rgb(225,148,7)" fg:x="68" fg:w="5"/><text x="55.0887%" y="399.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="373" width="4.0323%" height="15" fill="rgb(220,160,43)" fg:x="68" fg:w="5"/><text x="55.0887%" y="383.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (5 samples, 4.03%)</title><rect x="54.8387%" y="357" width="4.0323%" height="15" fill="rgb(213,52,39)" fg:x="68" fg:w="5"/><text x="55.0887%" y="367.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (5 samples, 4.03%)</title><rect x="54.8387%" y="341" width="4.0323%" height="15" fill="rgb(243,137,7)" fg:x="68" fg:w="5"/><text x="55.0887%" y="351.50">simp..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (5 samples, 4.03%)</title><rect x="54.8387%" y="325" width="4.0323%" height="15" fill="rgb(230,79,13)" fg:x="68" fg:w="5"/><text x="55.0887%" y="335.50">simp..</text></g><g><title>simple`fancy_regex::compile::compile_inner (5 samples, 4.03%)</title><rect x="54.8387%" y="309" width="4.0323%" height="15" fill="rgb(247,105,23)" fg:x="68" fg:w="5"/><text x="55.0887%" y="319.50">simp..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (5 samples, 4.03%)</title><rect x="54.8387%" y="293" width="4.0323%" height="15" fill="rgb(223,179,41)" fg:x="68" fg:w="5"/><text x="55.0887%" y="303.50">simp..</text></g><g><title>simple`regex_automata::meta::strategy::new (5 samples, 4.03%)</title><rect x="54.8387%" y="277" width="4.0323%" height="15" fill="rgb(218,9,34)" fg:x="68" fg:w="5"/><text x="55.0887%" y="287.50">simp..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 2.42%)</title><rect x="56.4516%" y="261" width="2.4194%" height="15" fill="rgb(222,106,8)" fg:x="70" fg:w="3"/><text x="56.7016%" y="271.50">si..</text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="58.0645%" y="245" width="0.8065%" height="15" fill="rgb(211,220,0)" fg:x="72" fg:w="1"/><text x="58.3145%" y="255.50"></text></g><g><title>simple`DYLD-STUB$$memcmp (1 samples, 0.81%)</title><rect x="58.8710%" y="485" width="0.8065%" height="15" fill="rgb(229,52,16)" fg:x="73" fg:w="1"/><text x="59.1210%" y="495.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 2.42%)</title><rect x="58.8710%" y="517" width="2.4194%" height="15" fill="rgb(212,155,18)" fg:x="73" fg:w="3"/><text x="59.1210%" y="527.50">si..</text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (3 samples, 2.42%)</title><rect x="58.8710%" y="501" width="2.4194%" height="15" fill="rgb(242,21,14)" fg:x="73" fg:w="3"/><text x="59.1210%" y="511.50">si..</text></g><g><title>simple`fancy_regex::vm::run (2 samples, 1.61%)</title><rect x="59.6774%" y="485" width="1.6129%" height="15" fill="rgb(222,19,48)" fg:x="74" fg:w="2"/><text x="59.9274%" y="495.50"></text></g><g><title>simple`fancy_regex::Regex::new (1 samples, 0.81%)</title><rect x="61.2903%" y="517" width="0.8065%" height="15" fill="rgb(232,45,27)" fg:x="76" fg:w="1"/><text x="61.5403%" y="527.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (1 samples, 0.81%)</title><rect x="61.2903%" y="501" width="0.8065%" height="15" fill="rgb(249,103,42)" fg:x="76" fg:w="1"/><text x="61.5403%" y="511.50"></text></g><g><title>simple`fancy_regex::compile::compile (1 samples, 0.81%)</title><rect x="61.2903%" y="485" width="0.8065%" height="15" fill="rgb(246,81,33)" fg:x="76" fg:w="1"/><text x="61.5403%" y="495.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="61.2903%" y="469" width="0.8065%" height="15" fill="rgb(252,33,42)" fg:x="76" fg:w="1"/><text x="61.5403%" y="479.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="61.2903%" y="453" width="0.8065%" height="15" fill="rgb(209,212,41)" fg:x="76" fg:w="1"/><text x="61.5403%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="61.2903%" y="437" width="0.8065%" height="15" fill="rgb(207,154,6)" fg:x="76" fg:w="1"/><text x="61.5403%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="61.2903%" y="421" width="0.8065%" height="15" fill="rgb(223,64,47)" fg:x="76" fg:w="1"/><text x="61.5403%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (1 samples, 0.81%)</title><rect x="61.2903%" y="405" width="0.8065%" height="15" fill="rgb(211,161,38)" fg:x="76" fg:w="1"/><text x="61.5403%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="61.2903%" y="389" width="0.8065%" height="15" fill="rgb(219,138,40)" fg:x="76" fg:w="1"/><text x="61.5403%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="61.2903%" y="373" width="0.8065%" height="15" fill="rgb(241,228,46)" fg:x="76" fg:w="1"/><text x="61.5403%" y="383.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="61.2903%" y="357" width="0.8065%" height="15" fill="rgb(223,209,38)" fg:x="76" fg:w="1"/><text x="61.5403%" y="367.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="61.2903%" y="341" width="0.8065%" height="15" fill="rgb(236,164,45)" fg:x="76" fg:w="1"/><text x="61.5403%" y="351.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="61.2903%" y="325" width="0.8065%" height="15" fill="rgb(231,15,5)" fg:x="76" fg:w="1"/><text x="61.5403%" y="335.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="61.2903%" y="309" width="0.8065%" height="15" fill="rgb(252,35,15)" fg:x="76" fg:w="1"/><text x="61.5403%" y="319.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="61.2903%" y="293" width="0.8065%" height="15" fill="rgb(248,181,18)" fg:x="76" fg:w="1"/><text x="61.5403%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.81%)</title><rect x="61.2903%" y="277" width="0.8065%" height="15" fill="rgb(233,39,42)" fg:x="76" fg:w="1"/><text x="61.5403%" y="287.50"></text></g><g><title>simple`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.81%)</title><rect x="62.0968%" y="421" width="0.8065%" height="15" fill="rgb(238,110,33)" fg:x="77" fg:w="1"/><text x="62.3468%" y="431.50"></text></g><g><title>simple`&lt;syntect::highlighting::highlighter::RangedHighlightIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="62.0968%" y="405" width="0.8065%" height="15" fill="rgb(233,195,10)" fg:x="77" fg:w="1"/><text x="62.3468%" y="415.50"></text></g><g><title>simple`&lt;syntect::highlighting::highlighter::RangedHighlightIterator as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.81%)</title><rect x="62.0968%" y="389" width="0.8065%" height="15" fill="rgb(254,105,3)" fg:x="77" fg:w="1"/><text x="62.3468%" y="399.50"></text></g><g><title>simple`syntect::highlighting::highlighter::Highlighter::update_single_cache_for_push (1 samples, 0.81%)</title><rect x="62.0968%" y="373" width="0.8065%" height="15" fill="rgb(221,225,9)" fg:x="77" fg:w="1"/><text x="62.3468%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.81%)</title><rect x="62.9032%" y="325" width="0.8065%" height="15" fill="rgb(224,227,45)" fg:x="78" fg:w="1"/><text x="63.1532%" y="335.50"></text></g><g><title>simple`syntect::easy::HighlightLines::highlight_line (3 samples, 2.42%)</title><rect x="62.0968%" y="437" width="2.4194%" height="15" fill="rgb(229,198,43)" fg:x="77" fg:w="3"/><text x="62.3468%" y="447.50">si..</text></g><g><title>simple`syntect::parsing::parser::ParseState::parse_line (2 samples, 1.61%)</title><rect x="62.9032%" y="421" width="1.6129%" height="15" fill="rgb(206,209,35)" fg:x="78" fg:w="2"/><text x="63.1532%" y="431.50"></text></g><g><title>simple`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 1.61%)</title><rect x="62.9032%" y="405" width="1.6129%" height="15" fill="rgb(245,195,53)" fg:x="78" fg:w="2"/><text x="63.1532%" y="415.50"></text></g><g><title>simple`once_cell::imp::initialize_or_wait (2 samples, 1.61%)</title><rect x="62.9032%" y="389" width="1.6129%" height="15" fill="rgb(240,92,26)" fg:x="78" fg:w="2"/><text x="63.1532%" y="399.50"></text></g><g><title>simple`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 1.61%)</title><rect x="62.9032%" y="373" width="1.6129%" height="15" fill="rgb(207,40,23)" fg:x="78" fg:w="2"/><text x="63.1532%" y="383.50"></text></g><g><title>simple`onig::Regex::with_options_and_encoding (2 samples, 1.61%)</title><rect x="62.9032%" y="357" width="1.6129%" height="15" fill="rgb(223,111,35)" fg:x="78" fg:w="2"/><text x="63.1532%" y="367.50"></text></g><g><title>simple`onig_new (2 samples, 1.61%)</title><rect x="62.9032%" y="341" width="1.6129%" height="15" fill="rgb(229,147,28)" fg:x="78" fg:w="2"/><text x="63.1532%" y="351.50"></text></g><g><title>simple`onig_compile (1 samples, 0.81%)</title><rect x="63.7097%" y="325" width="0.8065%" height="15" fill="rgb(211,29,28)" fg:x="79" fg:w="1"/><text x="63.9597%" y="335.50"></text></g><g><title>simple`parse_and_tune (1 samples, 0.81%)</title><rect x="63.7097%" y="309" width="0.8065%" height="15" fill="rgb(228,72,33)" fg:x="79" fg:w="1"/><text x="63.9597%" y="319.50"></text></g><g><title>simple`onig_parse_tree (1 samples, 0.81%)</title><rect x="63.7097%" y="293" width="0.8065%" height="15" fill="rgb(205,214,31)" fg:x="79" fg:w="1"/><text x="63.9597%" y="303.50"></text></g><g><title>simple`prs_alts (1 samples, 0.81%)</title><rect x="63.7097%" y="277" width="0.8065%" height="15" fill="rgb(224,111,15)" fg:x="79" fg:w="1"/><text x="63.9597%" y="287.50"></text></g><g><title>simple`prs_branch (1 samples, 0.81%)</title><rect x="63.7097%" y="261" width="0.8065%" height="15" fill="rgb(253,21,26)" fg:x="79" fg:w="1"/><text x="63.9597%" y="271.50"></text></g><g><title>simple`prs_exp (1 samples, 0.81%)</title><rect x="63.7097%" y="245" width="0.8065%" height="15" fill="rgb(245,139,43)" fg:x="79" fg:w="1"/><text x="63.9597%" y="255.50"></text></g><g><title>simple`prs_alts (1 samples, 0.81%)</title><rect x="63.7097%" y="229" width="0.8065%" height="15" fill="rgb(252,170,7)" fg:x="79" fg:w="1"/><text x="63.9597%" y="239.50"></text></g><g><title>simple`prs_branch (1 samples, 0.81%)</title><rect x="63.7097%" y="213" width="0.8065%" height="15" fill="rgb(231,118,14)" fg:x="79" fg:w="1"/><text x="63.9597%" y="223.50"></text></g><g><title>simple`prs_exp (1 samples, 0.81%)</title><rect x="63.7097%" y="197" width="0.8065%" height="15" fill="rgb(238,83,0)" fg:x="79" fg:w="1"/><text x="63.9597%" y="207.50"></text></g><g><title>simple`prs_alts (1 samples, 0.81%)</title><rect x="63.7097%" y="181" width="0.8065%" height="15" fill="rgb(221,39,39)" fg:x="79" fg:w="1"/><text x="63.9597%" y="191.50"></text></g><g><title>simple`prs_branch (1 samples, 0.81%)</title><rect x="63.7097%" y="165" width="0.8065%" height="15" fill="rgb(222,119,46)" fg:x="79" fg:w="1"/><text x="63.9597%" y="175.50"></text></g><g><title>simple`prs_exp (1 samples, 0.81%)</title><rect x="63.7097%" y="149" width="0.8065%" height="15" fill="rgb(222,165,49)" fg:x="79" fg:w="1"/><text x="63.9597%" y="159.50"></text></g><g><title>simple`prs_alts (1 samples, 0.81%)</title><rect x="63.7097%" y="133" width="0.8065%" height="15" fill="rgb(219,113,52)" fg:x="79" fg:w="1"/><text x="63.9597%" y="143.50"></text></g><g><title>simple`prs_branch (1 samples, 0.81%)</title><rect x="63.7097%" y="117" width="0.8065%" height="15" fill="rgb(214,7,15)" fg:x="79" fg:w="1"/><text x="63.9597%" y="127.50"></text></g><g><title>simple`prs_exp (1 samples, 0.81%)</title><rect x="63.7097%" y="101" width="0.8065%" height="15" fill="rgb(235,32,4)" fg:x="79" fg:w="1"/><text x="63.9597%" y="111.50"></text></g><g><title>simple`prs_cc (1 samples, 0.81%)</title><rect x="63.7097%" y="85" width="0.8065%" height="15" fill="rgb(238,90,54)" fg:x="79" fg:w="1"/><text x="63.9597%" y="95.50"></text></g><g><title>simple`add_ctype_to_cc (1 samples, 0.81%)</title><rect x="63.7097%" y="69" width="0.8065%" height="15" fill="rgb(213,208,19)" fg:x="79" fg:w="1"/><text x="63.9597%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="63.7097%" y="53" width="0.8065%" height="15" fill="rgb(233,156,4)" fg:x="79" fg:w="1"/><text x="63.9597%" y="63.50"></text></g><g><title>simple`comrak::markdown_to_html_with_plugins (4 samples, 3.23%)</title><rect x="62.0968%" y="501" width="3.2258%" height="15" fill="rgb(207,194,5)" fg:x="77" fg:w="4"/><text x="62.3468%" y="511.50">sim..</text></g><g><title>simple`comrak::html::format_document_with_plugins (4 samples, 3.23%)</title><rect x="62.0968%" y="485" width="3.2258%" height="15" fill="rgb(206,111,30)" fg:x="77" fg:w="4"/><text x="62.3468%" y="495.50">sim..</text></g><g><title>simple`comrak::html::HtmlFormatter::format_node (4 samples, 3.23%)</title><rect x="62.0968%" y="469" width="3.2258%" height="15" fill="rgb(243,70,54)" fg:x="77" fg:w="4"/><text x="62.3468%" y="479.50">sim..</text></g><g><title>simple`&lt;comrak::plugins::syntect::SyntectAdapter as comrak::adapters::SyntaxHighlighterAdapter&gt;::write_highlighted (4 samples, 3.23%)</title><rect x="62.0968%" y="453" width="3.2258%" height="15" fill="rgb(242,28,8)" fg:x="77" fg:w="4"/><text x="62.3468%" y="463.50">sim..</text></g><g><title>simple`syntect::easy::HighlightLines::new (1 samples, 0.81%)</title><rect x="64.5161%" y="437" width="0.8065%" height="15" fill="rgb(219,106,18)" fg:x="80" fg:w="1"/><text x="64.7661%" y="447.50"></text></g><g><title>simple`syntect::parsing::parser::ParseState::new (1 samples, 0.81%)</title><rect x="64.5161%" y="421" width="0.8065%" height="15" fill="rgb(244,222,10)" fg:x="80" fg:w="1"/><text x="64.7661%" y="431.50"></text></g><g><title>simple`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.81%)</title><rect x="64.5161%" y="405" width="0.8065%" height="15" fill="rgb(236,179,52)" fg:x="80" fg:w="1"/><text x="64.7661%" y="415.50"></text></g><g><title>simple`once_cell::imp::initialize_or_wait (1 samples, 0.81%)</title><rect x="64.5161%" y="389" width="0.8065%" height="15" fill="rgb(213,23,39)" fg:x="80" fg:w="1"/><text x="64.7661%" y="399.50"></text></g><g><title>simple`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.81%)</title><rect x="64.5161%" y="373" width="0.8065%" height="15" fill="rgb(238,48,10)" fg:x="80" fg:w="1"/><text x="64.7661%" y="383.50"></text></g><g><title>simple`syntect::dumps::deserialize_from_reader_impl (1 samples, 0.81%)</title><rect x="64.5161%" y="357" width="0.8065%" height="15" fill="rgb(251,196,23)" fg:x="80" fg:w="1"/><text x="64.7661%" y="367.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="64.5161%" y="341" width="0.8065%" height="15" fill="rgb(250,152,24)" fg:x="80" fg:w="1"/><text x="64.7661%" y="351.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="64.5161%" y="325" width="0.8065%" height="15" fill="rgb(209,150,17)" fg:x="80" fg:w="1"/><text x="64.7661%" y="335.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="64.5161%" y="309" width="0.8065%" height="15" fill="rgb(234,202,34)" fg:x="80" fg:w="1"/><text x="64.7661%" y="319.50"></text></g><g><title>simple`serde::de::SeqAccess::next_element (1 samples, 0.81%)</title><rect x="64.5161%" y="293" width="0.8065%" height="15" fill="rgb(253,148,53)" fg:x="80" fg:w="1"/><text x="64.7661%" y="303.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="64.5161%" y="277" width="0.8065%" height="15" fill="rgb(218,129,16)" fg:x="80" fg:w="1"/><text x="64.7661%" y="287.50"></text></g><g><title>simple`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::Pattern&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.81%)</title><rect x="64.5161%" y="261" width="0.8065%" height="15" fill="rgb(216,85,19)" fg:x="80" fg:w="1"/><text x="64.7661%" y="271.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="64.5161%" y="245" width="0.8065%" height="15" fill="rgb(235,228,7)" fg:x="80" fg:w="1"/><text x="64.7661%" y="255.50"></text></g><g><title>simple`serde::de::SeqAccess::next_element (1 samples, 0.81%)</title><rect x="64.5161%" y="229" width="0.8065%" height="15" fill="rgb(245,175,0)" fg:x="80" fg:w="1"/><text x="64.7661%" y="239.50"></text></g><g><title>simple`std::io::default_read_exact (1 samples, 0.81%)</title><rect x="64.5161%" y="213" width="0.8065%" height="15" fill="rgb(208,168,36)" fg:x="80" fg:w="1"/><text x="64.7661%" y="223.50"></text></g><g><title>simple`syntect::dumps::_&lt;impl syntect::highlighting::theme_set::ThemeSet&gt;::load_defaults (2 samples, 1.61%)</title><rect x="65.3226%" y="485" width="1.6129%" height="15" fill="rgb(246,171,24)" fg:x="81" fg:w="2"/><text x="65.5726%" y="495.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 1.61%)</title><rect x="65.3226%" y="469" width="1.6129%" height="15" fill="rgb(215,142,24)" fg:x="81" fg:w="2"/><text x="65.5726%" y="479.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 1.61%)</title><rect x="65.3226%" y="453" width="1.6129%" height="15" fill="rgb(250,187,7)" fg:x="81" fg:w="2"/><text x="65.5726%" y="463.50"></text></g><g><title>simple`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 1.61%)</title><rect x="65.3226%" y="437" width="1.6129%" height="15" fill="rgb(228,66,33)" fg:x="81" fg:w="2"/><text x="65.5726%" y="447.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 1.61%)</title><rect x="65.3226%" y="421" width="1.6129%" height="15" fill="rgb(234,215,21)" fg:x="81" fg:w="2"/><text x="65.5726%" y="431.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 1.61%)</title><rect x="65.3226%" y="405" width="1.6129%" height="15" fill="rgb(222,191,20)" fg:x="81" fg:w="2"/><text x="65.5726%" y="415.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 1.61%)</title><rect x="65.3226%" y="389" width="1.6129%" height="15" fill="rgb(245,79,54)" fg:x="81" fg:w="2"/><text x="65.5726%" y="399.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 1.61%)</title><rect x="65.3226%" y="373" width="1.6129%" height="15" fill="rgb(240,10,37)" fg:x="81" fg:w="2"/><text x="65.5726%" y="383.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 1.61%)</title><rect x="65.3226%" y="357" width="1.6129%" height="15" fill="rgb(214,192,32)" fg:x="81" fg:w="2"/><text x="65.5726%" y="367.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 1.61%)</title><rect x="65.3226%" y="341" width="1.6129%" height="15" fill="rgb(209,36,54)" fg:x="81" fg:w="2"/><text x="65.5726%" y="351.50"></text></g><g><title>simple`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (2 samples, 1.61%)</title><rect x="65.3226%" y="325" width="1.6129%" height="15" fill="rgb(220,10,11)" fg:x="81" fg:w="2"/><text x="65.5726%" y="335.50"></text></g><g><title>simple`syntect::parsing::scope::Scope::new (2 samples, 1.61%)</title><rect x="65.3226%" y="309" width="1.6129%" height="15" fill="rgb(221,106,17)" fg:x="81" fg:w="2"/><text x="65.5726%" y="319.50"></text></g><g><title>simple`syntect::parsing::scope::ScopeRepository::build (2 samples, 1.61%)</title><rect x="65.3226%" y="293" width="1.6129%" height="15" fill="rgb(251,142,44)" fg:x="81" fg:w="2"/><text x="65.5726%" y="303.50"></text></g><g><title>simple`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 1.61%)</title><rect x="65.3226%" y="277" width="1.6129%" height="15" fill="rgb(238,13,15)" fg:x="81" fg:w="2"/><text x="65.5726%" y="287.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="65.3226%" y="261" width="1.6129%" height="15" fill="rgb(208,107,27)" fg:x="81" fg:w="2"/><text x="65.5726%" y="271.50"></text></g><g><title>simple`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 1.61%)</title><rect x="65.3226%" y="245" width="1.6129%" height="15" fill="rgb(205,136,37)" fg:x="81" fg:w="2"/><text x="65.5726%" y="255.50"></text></g><g><title>simple`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.81%)</title><rect x="66.1290%" y="229" width="0.8065%" height="15" fill="rgb(250,205,27)" fg:x="82" fg:w="1"/><text x="66.3790%" y="239.50"></text></g><g><title>simple`simple::markdown::markdown_element (7 samples, 5.65%)</title><rect x="62.0968%" y="517" width="5.6452%" height="15" fill="rgb(210,80,43)" fg:x="77" fg:w="7"/><text x="62.3468%" y="527.50">simple`..</text></g><g><title>simple`comrak::plugins::syntect::SyntectAdapterBuilder::build (3 samples, 2.42%)</title><rect x="65.3226%" y="501" width="2.4194%" height="15" fill="rgb(247,160,36)" fg:x="81" fg:w="3"/><text x="65.5726%" y="511.50">si..</text></g><g><title>simple`syntect::dumps::_&lt;impl syntect::parsing::syntax_set::SyntaxSet&gt;::load_defaults_newlines (1 samples, 0.81%)</title><rect x="66.9355%" y="485" width="0.8065%" height="15" fill="rgb(234,13,49)" fg:x="83" fg:w="1"/><text x="67.1855%" y="495.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="66.9355%" y="469" width="0.8065%" height="15" fill="rgb(234,122,0)" fg:x="83" fg:w="1"/><text x="67.1855%" y="479.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="66.9355%" y="453" width="0.8065%" height="15" fill="rgb(207,146,38)" fg:x="83" fg:w="1"/><text x="67.1855%" y="463.50"></text></g><g><title>simple`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.81%)</title><rect x="66.9355%" y="437" width="0.8065%" height="15" fill="rgb(207,177,25)" fg:x="83" fg:w="1"/><text x="67.1855%" y="447.50"></text></g><g><title>simple`serde::de::SeqAccess::next_element (1 samples, 0.81%)</title><rect x="66.9355%" y="421" width="0.8065%" height="15" fill="rgb(211,178,42)" fg:x="83" fg:w="1"/><text x="67.1855%" y="431.50"></text></g><g><title>simple`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.81%)</title><rect x="66.9355%" y="405" width="0.8065%" height="15" fill="rgb(230,69,54)" fg:x="83" fg:w="1"/><text x="67.1855%" y="415.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="67.7419%" y="485" width="0.8065%" height="15" fill="rgb(214,135,41)" fg:x="84" fg:w="1"/><text x="67.9919%" y="495.50"></text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (1 samples, 0.81%)</title><rect x="67.7419%" y="469" width="0.8065%" height="15" fill="rgb(237,67,25)" fg:x="84" fg:w="1"/><text x="67.9919%" y="479.50"></text></g><g><title>simple`DYLD-STUB$$memcmp (1 samples, 0.81%)</title><rect x="67.7419%" y="453" width="0.8065%" height="15" fill="rgb(222,189,50)" fg:x="84" fg:w="1"/><text x="67.9919%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="68.5484%" y="341" width="0.8065%" height="15" fill="rgb(245,148,34)" fg:x="85" fg:w="1"/><text x="68.7984%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="68.5484%" y="325" width="0.8065%" height="15" fill="rgb(222,29,6)" fg:x="85" fg:w="1"/><text x="68.7984%" y="335.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="68.5484%" y="309" width="0.8065%" height="15" fill="rgb(221,189,43)" fg:x="85" fg:w="1"/><text x="68.7984%" y="319.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="68.5484%" y="293" width="0.8065%" height="15" fill="rgb(207,36,27)" fg:x="85" fg:w="1"/><text x="68.7984%" y="303.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="68.5484%" y="277" width="0.8065%" height="15" fill="rgb(217,90,24)" fg:x="85" fg:w="1"/><text x="68.7984%" y="287.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="68.5484%" y="261" width="0.8065%" height="15" fill="rgb(224,66,35)" fg:x="85" fg:w="1"/><text x="68.7984%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="68.5484%" y="245" width="0.8065%" height="15" fill="rgb(221,13,50)" fg:x="85" fg:w="1"/><text x="68.7984%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="68.5484%" y="229" width="0.8065%" height="15" fill="rgb(236,68,49)" fg:x="85" fg:w="1"/><text x="68.7984%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="68.5484%" y="213" width="0.8065%" height="15" fill="rgb(229,146,28)" fg:x="85" fg:w="1"/><text x="68.7984%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="68.5484%" y="197" width="0.8065%" height="15" fill="rgb(225,31,38)" fg:x="85" fg:w="1"/><text x="68.7984%" y="207.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="68.5484%" y="181" width="0.8065%" height="15" fill="rgb(250,208,3)" fg:x="85" fg:w="1"/><text x="68.7984%" y="191.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="68.5484%" y="165" width="0.8065%" height="15" fill="rgb(246,54,23)" fg:x="85" fg:w="1"/><text x="68.7984%" y="175.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (3 samples, 2.42%)</title><rect x="68.5484%" y="373" width="2.4194%" height="15" fill="rgb(243,76,11)" fg:x="85" fg:w="3"/><text x="68.7984%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="68.5484%" y="357" width="2.4194%" height="15" fill="rgb(245,21,50)" fg:x="85" fg:w="3"/><text x="68.7984%" y="367.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="69.3548%" y="341" width="1.6129%" height="15" fill="rgb(228,9,43)" fg:x="86" fg:w="2"/><text x="69.6048%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="69.3548%" y="325" width="1.6129%" height="15" fill="rgb(208,100,47)" fg:x="86" fg:w="2"/><text x="69.6048%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="69.3548%" y="309" width="1.6129%" height="15" fill="rgb(232,26,8)" fg:x="86" fg:w="2"/><text x="69.6048%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="69.3548%" y="293" width="1.6129%" height="15" fill="rgb(216,166,38)" fg:x="86" fg:w="2"/><text x="69.6048%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="69.3548%" y="277" width="1.6129%" height="15" fill="rgb(251,202,51)" fg:x="86" fg:w="2"/><text x="69.6048%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="69.3548%" y="261" width="1.6129%" height="15" fill="rgb(254,216,34)" fg:x="86" fg:w="2"/><text x="69.6048%" y="271.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="69.3548%" y="245" width="1.6129%" height="15" fill="rgb(251,32,27)" fg:x="86" fg:w="2"/><text x="69.6048%" y="255.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="69.3548%" y="229" width="1.6129%" height="15" fill="rgb(208,127,28)" fg:x="86" fg:w="2"/><text x="69.6048%" y="239.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="69.3548%" y="213" width="1.6129%" height="15" fill="rgb(224,137,22)" fg:x="86" fg:w="2"/><text x="69.6048%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="69.3548%" y="197" width="1.6129%" height="15" fill="rgb(254,70,32)" fg:x="86" fg:w="2"/><text x="69.6048%" y="207.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="69.3548%" y="181" width="1.6129%" height="15" fill="rgb(229,75,37)" fg:x="86" fg:w="2"/><text x="69.6048%" y="191.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="70.1613%" y="165" width="0.8065%" height="15" fill="rgb(252,64,23)" fg:x="87" fg:w="1"/><text x="70.4113%" y="175.50"></text></g><g><title>simple`fancy_regex::Regex::new (4 samples, 3.23%)</title><rect x="68.5484%" y="485" width="3.2258%" height="15" fill="rgb(232,162,48)" fg:x="85" fg:w="4"/><text x="68.7984%" y="495.50">sim..</text></g><g><title>simple`fancy_regex::Regex::new_options (4 samples, 3.23%)</title><rect x="68.5484%" y="469" width="3.2258%" height="15" fill="rgb(246,160,12)" fg:x="85" fg:w="4"/><text x="68.7984%" y="479.50">sim..</text></g><g><title>simple`fancy_regex::compile::compile (4 samples, 3.23%)</title><rect x="68.5484%" y="453" width="3.2258%" height="15" fill="rgb(247,166,0)" fg:x="85" fg:w="4"/><text x="68.7984%" y="463.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="68.5484%" y="437" width="3.2258%" height="15" fill="rgb(249,219,21)" fg:x="85" fg:w="4"/><text x="68.7984%" y="447.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="68.5484%" y="421" width="3.2258%" height="15" fill="rgb(205,209,3)" fg:x="85" fg:w="4"/><text x="68.7984%" y="431.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="68.5484%" y="405" width="3.2258%" height="15" fill="rgb(243,44,1)" fg:x="85" fg:w="4"/><text x="68.7984%" y="415.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (4 samples, 3.23%)</title><rect x="68.5484%" y="389" width="3.2258%" height="15" fill="rgb(206,159,16)" fg:x="85" fg:w="4"/><text x="68.7984%" y="399.50">sim..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="70.9677%" y="373" width="0.8065%" height="15" fill="rgb(244,77,30)" fg:x="88" fg:w="1"/><text x="71.2177%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="70.9677%" y="357" width="0.8065%" height="15" fill="rgb(218,69,12)" fg:x="88" fg:w="1"/><text x="71.2177%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="70.9677%" y="341" width="0.8065%" height="15" fill="rgb(212,87,7)" fg:x="88" fg:w="1"/><text x="71.2177%" y="351.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="70.9677%" y="325" width="0.8065%" height="15" fill="rgb(245,114,25)" fg:x="88" fg:w="1"/><text x="71.2177%" y="335.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="70.9677%" y="309" width="0.8065%" height="15" fill="rgb(210,61,42)" fg:x="88" fg:w="1"/><text x="71.2177%" y="319.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="70.9677%" y="293" width="0.8065%" height="15" fill="rgb(211,52,33)" fg:x="88" fg:w="1"/><text x="71.2177%" y="303.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="70.9677%" y="277" width="0.8065%" height="15" fill="rgb(234,58,33)" fg:x="88" fg:w="1"/><text x="71.2177%" y="287.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="70.9677%" y="261" width="0.8065%" height="15" fill="rgb(220,115,36)" fg:x="88" fg:w="1"/><text x="71.2177%" y="271.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="70.9677%" y="245" width="0.8065%" height="15" fill="rgb(243,153,54)" fg:x="88" fg:w="1"/><text x="71.2177%" y="255.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.81%)</title><rect x="70.9677%" y="229" width="0.8065%" height="15" fill="rgb(251,47,18)" fg:x="88" fg:w="1"/><text x="71.2177%" y="239.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="70.9677%" y="213" width="0.8065%" height="15" fill="rgb(242,102,42)" fg:x="88" fg:w="1"/><text x="71.2177%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="70.9677%" y="197" width="0.8065%" height="15" fill="rgb(234,31,38)" fg:x="88" fg:w="1"/><text x="71.2177%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="70.9677%" y="181" width="0.8065%" height="15" fill="rgb(221,117,51)" fg:x="88" fg:w="1"/><text x="71.2177%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.81%)</title><rect x="70.9677%" y="165" width="0.8065%" height="15" fill="rgb(212,20,18)" fg:x="88" fg:w="1"/><text x="71.2177%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.81%)</title><rect x="70.9677%" y="149" width="0.8065%" height="15" fill="rgb(245,133,36)" fg:x="88" fg:w="1"/><text x="71.2177%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.81%)</title><rect x="71.7742%" y="421" width="0.8065%" height="15" fill="rgb(212,6,19)" fg:x="89" fg:w="1"/><text x="72.0242%" y="431.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="71.7742%" y="453" width="1.6129%" height="15" fill="rgb(218,1,36)" fg:x="89" fg:w="2"/><text x="72.0242%" y="463.50"></text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (2 samples, 1.61%)</title><rect x="71.7742%" y="437" width="1.6129%" height="15" fill="rgb(246,84,54)" fg:x="89" fg:w="2"/><text x="72.0242%" y="447.50"></text></g><g><title>simple`fancy_regex::vm::State::save (1 samples, 0.81%)</title><rect x="72.5806%" y="421" width="0.8065%" height="15" fill="rgb(242,110,6)" fg:x="90" fg:w="1"/><text x="72.8306%" y="431.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="73.3871%" y="261" width="0.8065%" height="15" fill="rgb(214,47,5)" fg:x="91" fg:w="1"/><text x="73.6371%" y="271.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="73.3871%" y="245" width="0.8065%" height="15" fill="rgb(218,159,25)" fg:x="91" fg:w="1"/><text x="73.6371%" y="255.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="73.3871%" y="229" width="0.8065%" height="15" fill="rgb(215,211,28)" fg:x="91" fg:w="1"/><text x="73.6371%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="73.3871%" y="213" width="0.8065%" height="15" fill="rgb(238,59,32)" fg:x="91" fg:w="1"/><text x="73.6371%" y="223.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (2 samples, 1.61%)</title><rect x="73.3871%" y="341" width="1.6129%" height="15" fill="rgb(226,82,3)" fg:x="91" fg:w="2"/><text x="73.6371%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="73.3871%" y="325" width="1.6129%" height="15" fill="rgb(240,164,32)" fg:x="91" fg:w="2"/><text x="73.6371%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="73.3871%" y="309" width="1.6129%" height="15" fill="rgb(232,46,7)" fg:x="91" fg:w="2"/><text x="73.6371%" y="319.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="73.3871%" y="293" width="1.6129%" height="15" fill="rgb(229,129,53)" fg:x="91" fg:w="2"/><text x="73.6371%" y="303.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="73.3871%" y="277" width="1.6129%" height="15" fill="rgb(234,188,29)" fg:x="91" fg:w="2"/><text x="73.6371%" y="287.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="74.1935%" y="261" width="0.8065%" height="15" fill="rgb(246,141,4)" fg:x="92" fg:w="1"/><text x="74.4435%" y="271.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="74.1935%" y="245" width="0.8065%" height="15" fill="rgb(229,23,39)" fg:x="92" fg:w="1"/><text x="74.4435%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="74.1935%" y="229" width="0.8065%" height="15" fill="rgb(206,12,3)" fg:x="92" fg:w="1"/><text x="74.4435%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="74.1935%" y="213" width="0.8065%" height="15" fill="rgb(252,226,20)" fg:x="92" fg:w="1"/><text x="74.4435%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.81%)</title><rect x="74.1935%" y="197" width="0.8065%" height="15" fill="rgb(216,123,35)" fg:x="92" fg:w="1"/><text x="74.4435%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="74.1935%" y="181" width="0.8065%" height="15" fill="rgb(212,68,40)" fg:x="92" fg:w="1"/><text x="74.4435%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="74.1935%" y="165" width="0.8065%" height="15" fill="rgb(254,125,32)" fg:x="92" fg:w="1"/><text x="74.4435%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="74.1935%" y="149" width="0.8065%" height="15" fill="rgb(253,97,22)" fg:x="92" fg:w="1"/><text x="74.4435%" y="159.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="74.1935%" y="133" width="0.8065%" height="15" fill="rgb(241,101,14)" fg:x="92" fg:w="1"/><text x="74.4435%" y="143.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="74.1935%" y="117" width="0.8065%" height="15" fill="rgb(238,103,29)" fg:x="92" fg:w="1"/><text x="74.4435%" y="127.50"></text></g><g><title>simple`fancy_regex::Regex::new (3 samples, 2.42%)</title><rect x="73.3871%" y="453" width="2.4194%" height="15" fill="rgb(233,195,47)" fg:x="91" fg:w="3"/><text x="73.6371%" y="463.50">si..</text></g><g><title>simple`fancy_regex::Regex::new_options (3 samples, 2.42%)</title><rect x="73.3871%" y="437" width="2.4194%" height="15" fill="rgb(246,218,30)" fg:x="91" fg:w="3"/><text x="73.6371%" y="447.50">si..</text></g><g><title>simple`fancy_regex::compile::compile (3 samples, 2.42%)</title><rect x="73.3871%" y="421" width="2.4194%" height="15" fill="rgb(219,145,47)" fg:x="91" fg:w="3"/><text x="73.6371%" y="431.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="73.3871%" y="405" width="2.4194%" height="15" fill="rgb(243,12,26)" fg:x="91" fg:w="3"/><text x="73.6371%" y="415.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="73.3871%" y="389" width="2.4194%" height="15" fill="rgb(214,87,16)" fg:x="91" fg:w="3"/><text x="73.6371%" y="399.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="73.3871%" y="373" width="2.4194%" height="15" fill="rgb(208,99,42)" fg:x="91" fg:w="3"/><text x="73.6371%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="73.3871%" y="357" width="2.4194%" height="15" fill="rgb(253,99,2)" fg:x="91" fg:w="3"/><text x="73.6371%" y="367.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="75.0000%" y="341" width="0.8065%" height="15" fill="rgb(220,168,23)" fg:x="93" fg:w="1"/><text x="75.2500%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="75.0000%" y="325" width="0.8065%" height="15" fill="rgb(242,38,24)" fg:x="93" fg:w="1"/><text x="75.2500%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="75.0000%" y="309" width="0.8065%" height="15" fill="rgb(225,182,9)" fg:x="93" fg:w="1"/><text x="75.2500%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="75.0000%" y="293" width="0.8065%" height="15" fill="rgb(243,178,37)" fg:x="93" fg:w="1"/><text x="75.2500%" y="303.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="75.0000%" y="277" width="0.8065%" height="15" fill="rgb(232,139,19)" fg:x="93" fg:w="1"/><text x="75.2500%" y="287.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="75.0000%" y="261" width="0.8065%" height="15" fill="rgb(225,201,24)" fg:x="93" fg:w="1"/><text x="75.2500%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="75.0000%" y="245" width="0.8065%" height="15" fill="rgb(221,47,46)" fg:x="93" fg:w="1"/><text x="75.2500%" y="255.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="75.0000%" y="229" width="0.8065%" height="15" fill="rgb(249,23,13)" fg:x="93" fg:w="1"/><text x="75.2500%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="75.0000%" y="213" width="0.8065%" height="15" fill="rgb(219,9,5)" fg:x="93" fg:w="1"/><text x="75.2500%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="75.0000%" y="197" width="0.8065%" height="15" fill="rgb(254,171,16)" fg:x="93" fg:w="1"/><text x="75.2500%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="75.0000%" y="181" width="0.8065%" height="15" fill="rgb(230,171,20)" fg:x="93" fg:w="1"/><text x="75.2500%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="75.0000%" y="165" width="0.8065%" height="15" fill="rgb(210,71,41)" fg:x="93" fg:w="1"/><text x="75.2500%" y="175.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="75.0000%" y="149" width="0.8065%" height="15" fill="rgb(206,173,20)" fg:x="93" fg:w="1"/><text x="75.2500%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="75.0000%" y="133" width="0.8065%" height="15" fill="rgb(233,88,34)" fg:x="93" fg:w="1"/><text x="75.2500%" y="143.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 2.42%)</title><rect x="75.8065%" y="437" width="2.4194%" height="15" fill="rgb(223,209,46)" fg:x="94" fg:w="3"/><text x="76.0565%" y="447.50">si..</text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (3 samples, 2.42%)</title><rect x="75.8065%" y="421" width="2.4194%" height="15" fill="rgb(250,43,18)" fg:x="94" fg:w="3"/><text x="76.0565%" y="431.50">si..</text></g><g><title>simple`fancy_regex::vm::run (3 samples, 2.42%)</title><rect x="75.8065%" y="405" width="2.4194%" height="15" fill="rgb(208,13,10)" fg:x="94" fg:w="3"/><text x="76.0565%" y="415.50">si..</text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="78.2258%" y="261" width="0.8065%" height="15" fill="rgb(212,200,36)" fg:x="97" fg:w="1"/><text x="78.4758%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="78.2258%" y="245" width="0.8065%" height="15" fill="rgb(225,90,30)" fg:x="97" fg:w="1"/><text x="78.4758%" y="255.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="78.2258%" y="229" width="0.8065%" height="15" fill="rgb(236,182,39)" fg:x="97" fg:w="1"/><text x="78.4758%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="78.2258%" y="213" width="0.8065%" height="15" fill="rgb(212,144,35)" fg:x="97" fg:w="1"/><text x="78.4758%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="78.2258%" y="197" width="0.8065%" height="15" fill="rgb(228,63,44)" fg:x="97" fg:w="1"/><text x="78.4758%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.81%)</title><rect x="78.2258%" y="181" width="0.8065%" height="15" fill="rgb(228,109,6)" fg:x="97" fg:w="1"/><text x="78.4758%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="78.2258%" y="165" width="0.8065%" height="15" fill="rgb(238,117,24)" fg:x="97" fg:w="1"/><text x="78.4758%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="78.2258%" y="149" width="0.8065%" height="15" fill="rgb(242,26,26)" fg:x="97" fg:w="1"/><text x="78.4758%" y="159.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="78.2258%" y="133" width="0.8065%" height="15" fill="rgb(221,92,48)" fg:x="97" fg:w="1"/><text x="78.4758%" y="143.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="78.2258%" y="117" width="0.8065%" height="15" fill="rgb(209,209,32)" fg:x="97" fg:w="1"/><text x="78.4758%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="78.2258%" y="101" width="0.8065%" height="15" fill="rgb(221,70,22)" fg:x="97" fg:w="1"/><text x="78.4758%" y="111.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (2 samples, 1.61%)</title><rect x="78.2258%" y="325" width="1.6129%" height="15" fill="rgb(248,145,5)" fg:x="97" fg:w="2"/><text x="78.4758%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="78.2258%" y="309" width="1.6129%" height="15" fill="rgb(226,116,26)" fg:x="97" fg:w="2"/><text x="78.4758%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="78.2258%" y="293" width="1.6129%" height="15" fill="rgb(244,5,17)" fg:x="97" fg:w="2"/><text x="78.4758%" y="303.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="78.2258%" y="277" width="1.6129%" height="15" fill="rgb(252,159,33)" fg:x="97" fg:w="2"/><text x="78.4758%" y="287.50"></text></g><g><title>simple`regex_syntax::hir::translate::Translator::translate (1 samples, 0.81%)</title><rect x="79.0323%" y="261" width="0.8065%" height="15" fill="rgb(206,71,0)" fg:x="98" fg:w="1"/><text x="79.2823%" y="271.50"></text></g><g><title>simple`regex_syntax::ast::visitor::visit (1 samples, 0.81%)</title><rect x="79.0323%" y="245" width="0.8065%" height="15" fill="rgb(233,118,54)" fg:x="98" fg:w="1"/><text x="79.2823%" y="255.50"></text></g><g><title>simple`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.81%)</title><rect x="79.0323%" y="229" width="0.8065%" height="15" fill="rgb(234,83,48)" fg:x="98" fg:w="1"/><text x="79.2823%" y="239.50"></text></g><g><title>simple`regex_syntax::hir::Hir::class (1 samples, 0.81%)</title><rect x="79.0323%" y="213" width="0.8065%" height="15" fill="rgb(228,3,54)" fg:x="98" fg:w="1"/><text x="79.2823%" y="223.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (1 samples, 0.81%)</title><rect x="79.8387%" y="293" width="0.8065%" height="15" fill="rgb(226,155,13)" fg:x="99" fg:w="1"/><text x="80.0887%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="79.8387%" y="277" width="0.8065%" height="15" fill="rgb(241,28,37)" fg:x="99" fg:w="1"/><text x="80.0887%" y="287.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="79.8387%" y="261" width="0.8065%" height="15" fill="rgb(233,93,10)" fg:x="99" fg:w="1"/><text x="80.0887%" y="271.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="79.8387%" y="245" width="0.8065%" height="15" fill="rgb(225,113,19)" fg:x="99" fg:w="1"/><text x="80.0887%" y="255.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="79.8387%" y="229" width="0.8065%" height="15" fill="rgb(241,2,18)" fg:x="99" fg:w="1"/><text x="80.0887%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="79.8387%" y="213" width="0.8065%" height="15" fill="rgb(228,207,21)" fg:x="99" fg:w="1"/><text x="80.0887%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="79.8387%" y="197" width="0.8065%" height="15" fill="rgb(213,211,35)" fg:x="99" fg:w="1"/><text x="80.0887%" y="207.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="79.8387%" y="181" width="0.8065%" height="15" fill="rgb(209,83,10)" fg:x="99" fg:w="1"/><text x="80.0887%" y="191.50"></text></g><g><title>simple`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.81%)</title><rect x="79.8387%" y="165" width="0.8065%" height="15" fill="rgb(209,164,1)" fg:x="99" fg:w="1"/><text x="80.0887%" y="175.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="80.6452%" y="117" width="0.8065%" height="15" fill="rgb(213,184,43)" fg:x="100" fg:w="1"/><text x="80.8952%" y="127.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (3 samples, 2.42%)</title><rect x="79.8387%" y="325" width="2.4194%" height="15" fill="rgb(231,61,34)" fg:x="99" fg:w="3"/><text x="80.0887%" y="335.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="79.8387%" y="309" width="2.4194%" height="15" fill="rgb(235,75,3)" fg:x="99" fg:w="3"/><text x="80.0887%" y="319.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="80.6452%" y="293" width="1.6129%" height="15" fill="rgb(220,106,47)" fg:x="100" fg:w="2"/><text x="80.8952%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="80.6452%" y="277" width="1.6129%" height="15" fill="rgb(210,196,33)" fg:x="100" fg:w="2"/><text x="80.8952%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="80.6452%" y="261" width="1.6129%" height="15" fill="rgb(229,154,42)" fg:x="100" fg:w="2"/><text x="80.8952%" y="271.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="80.6452%" y="245" width="1.6129%" height="15" fill="rgb(228,114,26)" fg:x="100" fg:w="2"/><text x="80.8952%" y="255.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="80.6452%" y="229" width="1.6129%" height="15" fill="rgb(208,144,1)" fg:x="100" fg:w="2"/><text x="80.8952%" y="239.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="80.6452%" y="213" width="1.6129%" height="15" fill="rgb(239,112,37)" fg:x="100" fg:w="2"/><text x="80.8952%" y="223.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="80.6452%" y="197" width="1.6129%" height="15" fill="rgb(210,96,50)" fg:x="100" fg:w="2"/><text x="80.8952%" y="207.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="80.6452%" y="181" width="1.6129%" height="15" fill="rgb(222,178,2)" fg:x="100" fg:w="2"/><text x="80.8952%" y="191.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="80.6452%" y="165" width="1.6129%" height="15" fill="rgb(226,74,18)" fg:x="100" fg:w="2"/><text x="80.8952%" y="175.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="80.6452%" y="149" width="1.6129%" height="15" fill="rgb(225,67,54)" fg:x="100" fg:w="2"/><text x="80.8952%" y="159.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="80.6452%" y="133" width="1.6129%" height="15" fill="rgb(251,92,32)" fg:x="100" fg:w="2"/><text x="80.8952%" y="143.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="81.4516%" y="117" width="0.8065%" height="15" fill="rgb(228,149,22)" fg:x="101" fg:w="1"/><text x="81.7016%" y="127.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="81.4516%" y="101" width="0.8065%" height="15" fill="rgb(243,54,13)" fg:x="101" fg:w="1"/><text x="81.7016%" y="111.50"></text></g><g><title>simple`fancy_regex::compile::compile (6 samples, 4.84%)</title><rect x="78.2258%" y="405" width="4.8387%" height="15" fill="rgb(243,180,28)" fg:x="97" fg:w="6"/><text x="78.4758%" y="415.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="78.2258%" y="389" width="4.8387%" height="15" fill="rgb(208,167,24)" fg:x="97" fg:w="6"/><text x="78.4758%" y="399.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="78.2258%" y="373" width="4.8387%" height="15" fill="rgb(245,73,45)" fg:x="97" fg:w="6"/><text x="78.4758%" y="383.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="78.2258%" y="357" width="4.8387%" height="15" fill="rgb(237,203,48)" fg:x="97" fg:w="6"/><text x="78.4758%" y="367.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="78.2258%" y="341" width="4.8387%" height="15" fill="rgb(211,197,16)" fg:x="97" fg:w="6"/><text x="78.4758%" y="351.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="82.2581%" y="325" width="0.8065%" height="15" fill="rgb(243,99,51)" fg:x="102" fg:w="1"/><text x="82.5081%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="82.2581%" y="309" width="0.8065%" height="15" fill="rgb(215,123,29)" fg:x="102" fg:w="1"/><text x="82.5081%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="82.2581%" y="293" width="0.8065%" height="15" fill="rgb(239,186,37)" fg:x="102" fg:w="1"/><text x="82.5081%" y="303.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="82.2581%" y="277" width="0.8065%" height="15" fill="rgb(252,136,39)" fg:x="102" fg:w="1"/><text x="82.5081%" y="287.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="82.2581%" y="261" width="0.8065%" height="15" fill="rgb(223,213,32)" fg:x="102" fg:w="1"/><text x="82.5081%" y="271.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="82.2581%" y="245" width="0.8065%" height="15" fill="rgb(233,115,5)" fg:x="102" fg:w="1"/><text x="82.5081%" y="255.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="82.2581%" y="229" width="0.8065%" height="15" fill="rgb(207,226,44)" fg:x="102" fg:w="1"/><text x="82.5081%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="82.2581%" y="213" width="0.8065%" height="15" fill="rgb(208,126,0)" fg:x="102" fg:w="1"/><text x="82.5081%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="82.2581%" y="197" width="0.8065%" height="15" fill="rgb(244,66,21)" fg:x="102" fg:w="1"/><text x="82.5081%" y="207.50"></text></g><g><title>simple`fancy_regex::Regex::new (7 samples, 5.65%)</title><rect x="78.2258%" y="437" width="5.6452%" height="15" fill="rgb(222,97,12)" fg:x="97" fg:w="7"/><text x="78.4758%" y="447.50">simple`..</text></g><g><title>simple`fancy_regex::Regex::new_options (7 samples, 5.65%)</title><rect x="78.2258%" y="421" width="5.6452%" height="15" fill="rgb(219,213,19)" fg:x="97" fg:w="7"/><text x="78.4758%" y="431.50">simple`..</text></g><g><title>simple`fancy_regex::parse::Parser::parse (1 samples, 0.81%)</title><rect x="83.0645%" y="405" width="0.8065%" height="15" fill="rgb(252,169,30)" fg:x="103" fg:w="1"/><text x="83.3145%" y="415.50"></text></g><g><title>simple`fancy_regex::parse::Parser::parse_re (1 samples, 0.81%)</title><rect x="83.0645%" y="389" width="0.8065%" height="15" fill="rgb(206,32,51)" fg:x="103" fg:w="1"/><text x="83.3145%" y="399.50"></text></g><g><title>simple`fancy_regex::parse::Parser::parse_branch (1 samples, 0.81%)</title><rect x="83.0645%" y="373" width="0.8065%" height="15" fill="rgb(250,172,42)" fg:x="103" fg:w="1"/><text x="83.3145%" y="383.50"></text></g><g><title>simple`fancy_regex::parse::Parser::parse_re (1 samples, 0.81%)</title><rect x="83.0645%" y="357" width="0.8065%" height="15" fill="rgb(209,34,43)" fg:x="103" fg:w="1"/><text x="83.3145%" y="367.50"></text></g><g><title>simple`fancy_regex::parse::Parser::parse_branch (1 samples, 0.81%)</title><rect x="83.0645%" y="341" width="0.8065%" height="15" fill="rgb(223,11,35)" fg:x="103" fg:w="1"/><text x="83.3145%" y="351.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="83.0645%" y="325" width="0.8065%" height="15" fill="rgb(251,219,26)" fg:x="103" fg:w="1"/><text x="83.3145%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.81%)</title><rect x="83.0645%" y="309" width="0.8065%" height="15" fill="rgb(231,119,3)" fg:x="103" fg:w="1"/><text x="83.3145%" y="319.50"></text></g><g><title>simple`&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="83.8710%" y="421" width="1.6129%" height="15" fill="rgb(216,97,11)" fg:x="104" fg:w="2"/><text x="84.1210%" y="431.50"></text></g><g><title>simple`fancy_regex::Regex::find_from_pos_with_option_flags (2 samples, 1.61%)</title><rect x="83.8710%" y="405" width="1.6129%" height="15" fill="rgb(223,59,9)" fg:x="104" fg:w="2"/><text x="84.1210%" y="415.50"></text></g><g><title>simple`fancy_regex::vm::run (2 samples, 1.61%)</title><rect x="83.8710%" y="389" width="1.6129%" height="15" fill="rgb(233,93,31)" fg:x="104" fg:w="2"/><text x="84.1210%" y="399.50"></text></g><g><title>simple`fancy_regex::vm::State::save (1 samples, 0.81%)</title><rect x="84.6774%" y="373" width="0.8065%" height="15" fill="rgb(239,81,33)" fg:x="105" fg:w="1"/><text x="84.9274%" y="383.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="389" width="0.8065%" height="15" fill="rgb(213,120,34)" fg:x="106" fg:w="1"/><text x="85.7339%" y="399.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="373" width="0.8065%" height="15" fill="rgb(243,49,53)" fg:x="106" fg:w="1"/><text x="85.7339%" y="383.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="357" width="0.8065%" height="15" fill="rgb(247,216,33)" fg:x="106" fg:w="1"/><text x="85.7339%" y="367.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="341" width="0.8065%" height="15" fill="rgb(226,26,14)" fg:x="106" fg:w="1"/><text x="85.7339%" y="351.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="325" width="0.8065%" height="15" fill="rgb(215,49,53)" fg:x="106" fg:w="1"/><text x="85.7339%" y="335.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="309" width="0.8065%" height="15" fill="rgb(245,162,40)" fg:x="106" fg:w="1"/><text x="85.7339%" y="319.50"></text></g><g><title>simple`fancy_regex::analyze::Analyzer::visit (1 samples, 0.81%)</title><rect x="85.4839%" y="293" width="0.8065%" height="15" fill="rgb(229,68,17)" fg:x="106" fg:w="1"/><text x="85.7339%" y="303.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Runner::maybe_add_state (1 samples, 0.81%)</title><rect x="86.2903%" y="181" width="0.8065%" height="15" fill="rgb(213,182,10)" fg:x="107" fg:w="1"/><text x="86.5403%" y="191.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.81%)</title><rect x="86.2903%" y="165" width="0.8065%" height="15" fill="rgb(245,125,30)" fg:x="107" fg:w="1"/><text x="86.5403%" y="175.50"></text></g><g><title>simple`alloc::raw_vec::finish_grow (1 samples, 0.81%)</title><rect x="86.2903%" y="149" width="0.8065%" height="15" fill="rgb(232,202,2)" fg:x="107" fg:w="1"/><text x="86.5403%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.81%)</title><rect x="86.2903%" y="133" width="0.8065%" height="15" fill="rgb(237,140,51)" fg:x="107" fg:w="1"/><text x="86.5403%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.81%)</title><rect x="86.2903%" y="117" width="0.8065%" height="15" fill="rgb(236,157,25)" fg:x="107" fg:w="1"/><text x="86.5403%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.81%)</title><rect x="86.2903%" y="101" width="0.8065%" height="15" fill="rgb(219,209,0)" fg:x="107" fg:w="1"/><text x="86.5403%" y="111.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_negative_lookaround (2 samples, 1.61%)</title><rect x="86.2903%" y="309" width="1.6129%" height="15" fill="rgb(240,116,54)" fg:x="107" fg:w="2"/><text x="86.5403%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="86.2903%" y="293" width="1.6129%" height="15" fill="rgb(216,10,36)" fg:x="107" fg:w="2"/><text x="86.5403%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="86.2903%" y="277" width="1.6129%" height="15" fill="rgb(222,72,44)" fg:x="107" fg:w="2"/><text x="86.5403%" y="287.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="86.2903%" y="261" width="1.6129%" height="15" fill="rgb(232,159,9)" fg:x="107" fg:w="2"/><text x="86.5403%" y="271.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="86.2903%" y="245" width="1.6129%" height="15" fill="rgb(210,39,32)" fg:x="107" fg:w="2"/><text x="86.5403%" y="255.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="86.2903%" y="229" width="1.6129%" height="15" fill="rgb(216,194,45)" fg:x="107" fg:w="2"/><text x="86.5403%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="86.2903%" y="213" width="1.6129%" height="15" fill="rgb(218,18,35)" fg:x="107" fg:w="2"/><text x="86.5403%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="86.2903%" y="197" width="1.6129%" height="15" fill="rgb(207,83,51)" fg:x="107" fg:w="2"/><text x="86.5403%" y="207.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="87.0968%" y="181" width="0.8065%" height="15" fill="rgb(225,63,43)" fg:x="108" fg:w="1"/><text x="87.3468%" y="191.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="87.0968%" y="165" width="0.8065%" height="15" fill="rgb(207,57,36)" fg:x="108" fg:w="1"/><text x="87.3468%" y="175.50"></text></g><g><title>simple`regex_automata::dfa::dense::DFA&lt;alloc::vec::Vec&lt;u32&gt;&gt;::set_transition (1 samples, 0.81%)</title><rect x="87.9032%" y="165" width="0.8065%" height="15" fill="rgb(216,99,33)" fg:x="109" fg:w="1"/><text x="88.1532%" y="175.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (2 samples, 1.61%)</title><rect x="87.9032%" y="213" width="1.6129%" height="15" fill="rgb(225,42,16)" fg:x="109" fg:w="2"/><text x="88.1532%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (2 samples, 1.61%)</title><rect x="87.9032%" y="197" width="1.6129%" height="15" fill="rgb(220,201,45)" fg:x="109" fg:w="2"/><text x="88.1532%" y="207.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (2 samples, 1.61%)</title><rect x="87.9032%" y="181" width="1.6129%" height="15" fill="rgb(225,33,4)" fg:x="109" fg:w="2"/><text x="88.1532%" y="191.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="88.7097%" y="165" width="0.8065%" height="15" fill="rgb(224,33,50)" fg:x="110" fg:w="1"/><text x="88.9597%" y="175.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="88.7097%" y="149" width="0.8065%" height="15" fill="rgb(246,198,51)" fg:x="110" fg:w="1"/><text x="88.9597%" y="159.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="89.5161%" y="197" width="0.8065%" height="15" fill="rgb(205,22,4)" fg:x="111" fg:w="1"/><text x="89.7661%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="89.5161%" y="181" width="0.8065%" height="15" fill="rgb(206,3,8)" fg:x="111" fg:w="1"/><text x="89.7661%" y="191.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="89.5161%" y="165" width="0.8065%" height="15" fill="rgb(251,23,15)" fg:x="111" fg:w="1"/><text x="89.7661%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.81%)</title><rect x="89.5161%" y="149" width="0.8065%" height="15" fill="rgb(252,88,28)" fg:x="111" fg:w="1"/><text x="89.7661%" y="159.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.81%)</title><rect x="89.5161%" y="133" width="0.8065%" height="15" fill="rgb(212,127,14)" fg:x="111" fg:w="1"/><text x="89.7661%" y="143.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.81%)</title><rect x="89.5161%" y="117" width="0.8065%" height="15" fill="rgb(247,145,37)" fg:x="111" fg:w="1"/><text x="89.7661%" y="127.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (1 samples, 0.81%)</title><rect x="89.5161%" y="101" width="0.8065%" height="15" fill="rgb(209,117,53)" fg:x="111" fg:w="1"/><text x="89.7661%" y="111.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (4 samples, 3.23%)</title><rect x="87.9032%" y="277" width="3.2258%" height="15" fill="rgb(212,90,42)" fg:x="109" fg:w="4"/><text x="88.1532%" y="287.50">sim..</text></g><g><title>simple`fancy_regex::compile::compile_inner (4 samples, 3.23%)</title><rect x="87.9032%" y="261" width="3.2258%" height="15" fill="rgb(218,164,37)" fg:x="109" fg:w="4"/><text x="88.1532%" y="271.50">sim..</text></g><g><title>simple`regex_automata::meta::regex::Builder::build (4 samples, 3.23%)</title><rect x="87.9032%" y="245" width="3.2258%" height="15" fill="rgb(246,65,34)" fg:x="109" fg:w="4"/><text x="88.1532%" y="255.50">sim..</text></g><g><title>simple`regex_automata::meta::strategy::new (4 samples, 3.23%)</title><rect x="87.9032%" y="229" width="3.2258%" height="15" fill="rgb(231,100,33)" fg:x="109" fg:w="4"/><text x="88.1532%" y="239.50">sim..</text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 1.61%)</title><rect x="89.5161%" y="213" width="1.6129%" height="15" fill="rgb(228,126,14)" fg:x="111" fg:w="2"/><text x="89.7661%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="90.3226%" y="197" width="0.8065%" height="15" fill="rgb(215,173,21)" fg:x="112" fg:w="1"/><text x="90.5726%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.81%)</title><rect x="90.3226%" y="181" width="0.8065%" height="15" fill="rgb(210,6,40)" fg:x="112" fg:w="1"/><text x="90.5726%" y="191.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (6 samples, 4.84%)</title><rect x="87.9032%" y="309" width="4.8387%" height="15" fill="rgb(212,48,18)" fg:x="109" fg:w="6"/><text x="88.1532%" y="319.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (6 samples, 4.84%)</title><rect x="87.9032%" y="293" width="4.8387%" height="15" fill="rgb(230,214,11)" fg:x="109" fg:w="6"/><text x="88.1532%" y="303.50">simple..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="91.1290%" y="277" width="1.6129%" height="15" fill="rgb(254,105,39)" fg:x="113" fg:w="2"/><text x="91.3790%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="91.1290%" y="261" width="1.6129%" height="15" fill="rgb(245,158,5)" fg:x="113" fg:w="2"/><text x="91.3790%" y="271.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="91.1290%" y="245" width="1.6129%" height="15" fill="rgb(249,208,11)" fg:x="113" fg:w="2"/><text x="91.3790%" y="255.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="91.1290%" y="229" width="1.6129%" height="15" fill="rgb(210,39,28)" fg:x="113" fg:w="2"/><text x="91.3790%" y="239.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="91.1290%" y="213" width="1.6129%" height="15" fill="rgb(211,56,53)" fg:x="113" fg:w="2"/><text x="91.3790%" y="223.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="91.1290%" y="197" width="1.6129%" height="15" fill="rgb(226,201,30)" fg:x="113" fg:w="2"/><text x="91.3790%" y="207.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="91.1290%" y="181" width="1.6129%" height="15" fill="rgb(239,101,34)" fg:x="113" fg:w="2"/><text x="91.3790%" y="191.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="91.1290%" y="165" width="1.6129%" height="15" fill="rgb(226,209,5)" fg:x="113" fg:w="2"/><text x="91.3790%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 1.61%)</title><rect x="91.1290%" y="149" width="1.6129%" height="15" fill="rgb(250,105,47)" fg:x="113" fg:w="2"/><text x="91.3790%" y="159.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.61%)</title><rect x="91.1290%" y="133" width="1.6129%" height="15" fill="rgb(230,72,3)" fg:x="113" fg:w="2"/><text x="91.3790%" y="143.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 1.61%)</title><rect x="91.1290%" y="117" width="1.6129%" height="15" fill="rgb(232,218,39)" fg:x="113" fg:w="2"/><text x="91.3790%" y="127.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 1.61%)</title><rect x="91.1290%" y="101" width="1.6129%" height="15" fill="rgb(248,166,6)" fg:x="113" fg:w="2"/><text x="91.3790%" y="111.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (2 samples, 1.61%)</title><rect x="91.1290%" y="85" width="1.6129%" height="15" fill="rgb(247,89,20)" fg:x="113" fg:w="2"/><text x="91.3790%" y="95.50"></text></g><g><title>simple`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (2 samples, 1.61%)</title><rect x="91.1290%" y="69" width="1.6129%" height="15" fill="rgb(248,130,54)" fg:x="113" fg:w="2"/><text x="91.3790%" y="79.50"></text></g><g><title>simple`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 1.61%)</title><rect x="91.1290%" y="53" width="1.6129%" height="15" fill="rgb(234,196,4)" fg:x="113" fg:w="2"/><text x="91.3790%" y="63.50"></text></g><g><title>simple`DYLD-STUB$$memcpy (2 samples, 1.61%)</title><rect x="91.1290%" y="37" width="1.6129%" height="15" fill="rgb(250,143,31)" fg:x="113" fg:w="2"/><text x="91.3790%" y="47.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="92.7419%" y="293" width="0.8065%" height="15" fill="rgb(211,110,34)" fg:x="115" fg:w="1"/><text x="92.9919%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="92.7419%" y="277" width="0.8065%" height="15" fill="rgb(215,124,48)" fg:x="115" fg:w="1"/><text x="92.9919%" y="287.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="92.7419%" y="261" width="0.8065%" height="15" fill="rgb(216,46,13)" fg:x="115" fg:w="1"/><text x="92.9919%" y="271.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="92.7419%" y="245" width="0.8065%" height="15" fill="rgb(205,184,25)" fg:x="115" fg:w="1"/><text x="92.9919%" y="255.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="92.7419%" y="229" width="0.8065%" height="15" fill="rgb(228,1,10)" fg:x="115" fg:w="1"/><text x="92.9919%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="92.7419%" y="213" width="0.8065%" height="15" fill="rgb(213,116,27)" fg:x="115" fg:w="1"/><text x="92.9919%" y="223.50"></text></g><g><title>simple`regex_automata::meta::wrappers::BoundedBacktracker::new (1 samples, 0.81%)</title><rect x="93.5484%" y="165" width="0.8065%" height="15" fill="rgb(241,95,50)" fg:x="116" fg:w="1"/><text x="93.7984%" y="175.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.81%)</title><rect x="93.5484%" y="149" width="0.8065%" height="15" fill="rgb(238,48,32)" fg:x="116" fg:w="1"/><text x="93.7984%" y="159.50"></text></g><g><title>simple`regex_automata::nfa::thompson::range_trie::RangeTrie::add_empty (1 samples, 0.81%)</title><rect x="93.5484%" y="133" width="0.8065%" height="15" fill="rgb(235,113,49)" fg:x="116" fg:w="1"/><text x="93.7984%" y="143.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="93.5484%" y="117" width="0.8065%" height="15" fill="rgb(205,127,43)" fg:x="116" fg:w="1"/><text x="93.7984%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.81%)</title><rect x="93.5484%" y="101" width="0.8065%" height="15" fill="rgb(250,162,2)" fg:x="116" fg:w="1"/><text x="93.7984%" y="111.50"></text></g><g><title>simple`simple::utils::page (24 samples, 19.35%)</title><rect x="75.8065%" y="453" width="19.3548%" height="15" fill="rgb(220,13,41)" fg:x="94" fg:w="24"/><text x="76.0565%" y="463.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::page (14 samples, 11.29%)</title><rect x="83.8710%" y="437" width="11.2903%" height="15" fill="rgb(249,221,25)" fg:x="104" fg:w="14"/><text x="84.1210%" y="447.50">simple`simple::ut..</text></g><g><title>simple`fancy_regex::Regex::new (12 samples, 9.68%)</title><rect x="85.4839%" y="421" width="9.6774%" height="15" fill="rgb(215,208,19)" fg:x="106" fg:w="12"/><text x="85.7339%" y="431.50">simple`fancy_r..</text></g><g><title>simple`fancy_regex::Regex::new_options (12 samples, 9.68%)</title><rect x="85.4839%" y="405" width="9.6774%" height="15" fill="rgb(236,175,2)" fg:x="106" fg:w="12"/><text x="85.7339%" y="415.50">simple`fancy_r..</text></g><g><title>simple`fancy_regex::compile::compile (11 samples, 8.87%)</title><rect x="86.2903%" y="389" width="8.8710%" height="15" fill="rgb(241,52,2)" fg:x="107" fg:w="11"/><text x="86.5403%" y="399.50">simple`fancy_..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (11 samples, 8.87%)</title><rect x="86.2903%" y="373" width="8.8710%" height="15" fill="rgb(248,140,14)" fg:x="107" fg:w="11"/><text x="86.5403%" y="383.50">simple`fancy_..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (11 samples, 8.87%)</title><rect x="86.2903%" y="357" width="8.8710%" height="15" fill="rgb(253,22,42)" fg:x="107" fg:w="11"/><text x="86.5403%" y="367.50">simple`fancy_..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (11 samples, 8.87%)</title><rect x="86.2903%" y="341" width="8.8710%" height="15" fill="rgb(234,61,47)" fg:x="107" fg:w="11"/><text x="86.5403%" y="351.50">simple`fancy_..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (11 samples, 8.87%)</title><rect x="86.2903%" y="325" width="8.8710%" height="15" fill="rgb(208,226,15)" fg:x="107" fg:w="11"/><text x="86.5403%" y="335.50">simple`fancy_..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="92.7419%" y="309" width="2.4194%" height="15" fill="rgb(217,221,4)" fg:x="115" fg:w="3"/><text x="92.9919%" y="319.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="93.5484%" y="293" width="1.6129%" height="15" fill="rgb(212,174,34)" fg:x="116" fg:w="2"/><text x="93.7984%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="93.5484%" y="277" width="1.6129%" height="15" fill="rgb(253,83,4)" fg:x="116" fg:w="2"/><text x="93.7984%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="93.5484%" y="261" width="1.6129%" height="15" fill="rgb(250,195,49)" fg:x="116" fg:w="2"/><text x="93.7984%" y="271.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="93.5484%" y="245" width="1.6129%" height="15" fill="rgb(241,192,25)" fg:x="116" fg:w="2"/><text x="93.7984%" y="255.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (2 samples, 1.61%)</title><rect x="93.5484%" y="229" width="1.6129%" height="15" fill="rgb(208,124,10)" fg:x="116" fg:w="2"/><text x="93.7984%" y="239.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="93.5484%" y="213" width="1.6129%" height="15" fill="rgb(222,33,0)" fg:x="116" fg:w="2"/><text x="93.7984%" y="223.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="93.5484%" y="197" width="1.6129%" height="15" fill="rgb(234,209,28)" fg:x="116" fg:w="2"/><text x="93.7984%" y="207.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="93.5484%" y="181" width="1.6129%" height="15" fill="rgb(224,11,23)" fg:x="116" fg:w="2"/><text x="93.7984%" y="191.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="94.3548%" y="165" width="0.8065%" height="15" fill="rgb(232,99,1)" fg:x="117" fg:w="1"/><text x="94.6048%" y="175.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="94.3548%" y="149" width="0.8065%" height="15" fill="rgb(237,95,45)" fg:x="117" fg:w="1"/><text x="94.6048%" y="159.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="94.3548%" y="133" width="0.8065%" height="15" fill="rgb(208,109,11)" fg:x="117" fg:w="1"/><text x="94.6048%" y="143.50"></text></g><g><title>simple`regex_automata::util::determinize::state::Repr::match_pattern_ids (1 samples, 0.81%)</title><rect x="94.3548%" y="117" width="0.8065%" height="15" fill="rgb(216,190,48)" fg:x="117" fg:w="1"/><text x="94.6048%" y="127.50"></text></g><g><title>simple`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.81%)</title><rect x="94.3548%" y="101" width="0.8065%" height="15" fill="rgb(251,171,36)" fg:x="117" fg:w="1"/><text x="94.6048%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.81%)</title><rect x="94.3548%" y="85" width="0.8065%" height="15" fill="rgb(230,62,22)" fg:x="117" fg:w="1"/><text x="94.6048%" y="95.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (1 samples, 0.81%)</title><rect x="95.1613%" y="325" width="0.8065%" height="15" fill="rgb(225,114,35)" fg:x="118" fg:w="1"/><text x="95.4113%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (1 samples, 0.81%)</title><rect x="95.1613%" y="309" width="0.8065%" height="15" fill="rgb(215,118,42)" fg:x="118" fg:w="1"/><text x="95.4113%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegates (1 samples, 0.81%)</title><rect x="95.1613%" y="293" width="0.8065%" height="15" fill="rgb(243,119,21)" fg:x="118" fg:w="1"/><text x="95.4113%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (1 samples, 0.81%)</title><rect x="95.1613%" y="277" width="0.8065%" height="15" fill="rgb(252,177,53)" fg:x="118" fg:w="1"/><text x="95.4113%" y="287.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (1 samples, 0.81%)</title><rect x="95.1613%" y="261" width="0.8065%" height="15" fill="rgb(237,209,29)" fg:x="118" fg:w="1"/><text x="95.4113%" y="271.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="95.1613%" y="245" width="0.8065%" height="15" fill="rgb(212,65,23)" fg:x="118" fg:w="1"/><text x="95.4113%" y="255.50"></text></g><g><title>simple`regex_automata::meta::wrappers::DFA::new (1 samples, 0.81%)</title><rect x="95.1613%" y="229" width="0.8065%" height="15" fill="rgb(230,222,46)" fg:x="118" fg:w="1"/><text x="95.4113%" y="239.50"></text></g><g><title>simple`regex_automata::dfa::dense::Builder::build_from_nfa (1 samples, 0.81%)</title><rect x="95.1613%" y="213" width="0.8065%" height="15" fill="rgb(215,135,32)" fg:x="118" fg:w="1"/><text x="95.4113%" y="223.50"></text></g><g><title>simple`regex_automata::dfa::determinize::Config::run (1 samples, 0.81%)</title><rect x="95.1613%" y="197" width="0.8065%" height="15" fill="rgb(246,101,22)" fg:x="118" fg:w="1"/><text x="95.4113%" y="207.50"></text></g><g><title>simple`regex_automata::util::determinize::next (1 samples, 0.81%)</title><rect x="95.1613%" y="181" width="0.8065%" height="15" fill="rgb(206,107,13)" fg:x="118" fg:w="1"/><text x="95.4113%" y="191.50"></text></g><g><title>simple`regex_automata::util::determinize::epsilon_closure (1 samples, 0.81%)</title><rect x="95.1613%" y="165" width="0.8065%" height="15" fill="rgb(250,100,44)" fg:x="118" fg:w="1"/><text x="95.4113%" y="175.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.81%)</title><rect x="95.9677%" y="213" width="0.8065%" height="15" fill="rgb(231,147,38)" fg:x="119" fg:w="1"/><text x="96.2177%" y="223.50"></text></g><g><title>simple`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (1 samples, 0.81%)</title><rect x="95.9677%" y="197" width="0.8065%" height="15" fill="rgb(229,8,40)" fg:x="119" fg:w="1"/><text x="96.2177%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.81%)</title><rect x="95.9677%" y="181" width="0.8065%" height="15" fill="rgb(221,135,30)" fg:x="119" fg:w="1"/><text x="96.2177%" y="191.50"></text></g><g><title>simple`simple::utils::sub_component_slot (37 samples, 29.84%)</title><rect x="67.7419%" y="517" width="29.8387%" height="15" fill="rgb(249,193,18)" fg:x="84" fg:w="37"/><text x="67.9919%" y="527.50">simple`simple::utils::sub_component_slot</text></g><g><title>simple`simple::utils::page (37 samples, 29.84%)</title><rect x="67.7419%" y="501" width="29.8387%" height="15" fill="rgb(209,133,39)" fg:x="84" fg:w="37"/><text x="67.9919%" y="511.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::sub_component_slot (32 samples, 25.81%)</title><rect x="71.7742%" y="485" width="25.8065%" height="15" fill="rgb(232,100,14)" fg:x="89" fg:w="32"/><text x="72.0242%" y="495.50">simple`simple::utils::sub_component_slot</text></g><g><title>simple`simple::utils::page (32 samples, 25.81%)</title><rect x="71.7742%" y="469" width="25.8065%" height="15" fill="rgb(224,185,1)" fg:x="89" fg:w="32"/><text x="72.0242%" y="479.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::targets_kv (3 samples, 2.42%)</title><rect x="95.1613%" y="453" width="2.4194%" height="15" fill="rgb(223,139,8)" fg:x="118" fg:w="3"/><text x="95.4113%" y="463.50">si..</text></g><g><title>simple`fancy_regex::Regex::new (3 samples, 2.42%)</title><rect x="95.1613%" y="437" width="2.4194%" height="15" fill="rgb(232,213,38)" fg:x="118" fg:w="3"/><text x="95.4113%" y="447.50">si..</text></g><g><title>simple`fancy_regex::Regex::new_options (3 samples, 2.42%)</title><rect x="95.1613%" y="421" width="2.4194%" height="15" fill="rgb(207,94,22)" fg:x="118" fg:w="3"/><text x="95.4113%" y="431.50">si..</text></g><g><title>simple`fancy_regex::compile::compile (3 samples, 2.42%)</title><rect x="95.1613%" y="405" width="2.4194%" height="15" fill="rgb(219,183,54)" fg:x="118" fg:w="3"/><text x="95.4113%" y="415.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="95.1613%" y="389" width="2.4194%" height="15" fill="rgb(216,185,54)" fg:x="118" fg:w="3"/><text x="95.4113%" y="399.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="95.1613%" y="373" width="2.4194%" height="15" fill="rgb(254,217,39)" fg:x="118" fg:w="3"/><text x="95.4113%" y="383.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="95.1613%" y="357" width="2.4194%" height="15" fill="rgb(240,178,23)" fg:x="118" fg:w="3"/><text x="95.4113%" y="367.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (3 samples, 2.42%)</title><rect x="95.1613%" y="341" width="2.4194%" height="15" fill="rgb(218,11,47)" fg:x="118" fg:w="3"/><text x="95.4113%" y="351.50">si..</text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="95.9677%" y="325" width="1.6129%" height="15" fill="rgb(218,51,51)" fg:x="119" fg:w="2"/><text x="96.2177%" y="335.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="95.9677%" y="309" width="1.6129%" height="15" fill="rgb(238,126,27)" fg:x="119" fg:w="2"/><text x="96.2177%" y="319.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="95.9677%" y="293" width="1.6129%" height="15" fill="rgb(249,202,22)" fg:x="119" fg:w="2"/><text x="96.2177%" y="303.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="95.9677%" y="277" width="1.6129%" height="15" fill="rgb(254,195,49)" fg:x="119" fg:w="2"/><text x="96.2177%" y="287.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="95.9677%" y="261" width="1.6129%" height="15" fill="rgb(208,123,14)" fg:x="119" fg:w="2"/><text x="96.2177%" y="271.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="95.9677%" y="245" width="1.6129%" height="15" fill="rgb(224,200,8)" fg:x="119" fg:w="2"/><text x="96.2177%" y="255.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (2 samples, 1.61%)</title><rect x="95.9677%" y="229" width="1.6129%" height="15" fill="rgb(217,61,36)" fg:x="119" fg:w="2"/><text x="96.2177%" y="239.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="96.7742%" y="213" width="0.8065%" height="15" fill="rgb(206,35,45)" fg:x="120" fg:w="1"/><text x="97.0242%" y="223.50"></text></g><g><title>simple`regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.81%)</title><rect x="96.7742%" y="197" width="0.8065%" height="15" fill="rgb(217,65,33)" fg:x="120" fg:w="1"/><text x="97.0242%" y="207.50"></text></g><g><title>simple`regex_automata::nfa::thompson::nfa::Inner::remap (1 samples, 0.81%)</title><rect x="96.7742%" y="181" width="0.8065%" height="15" fill="rgb(222,158,48)" fg:x="120" fg:w="1"/><text x="97.0242%" y="191.50"></text></g><g><title>simple`regex_automata::meta::strategy::new (1 samples, 0.81%)</title><rect x="97.5806%" y="293" width="0.8065%" height="15" fill="rgb(254,2,54)" fg:x="121" fg:w="1"/><text x="97.8306%" y="303.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.81%)</title><rect x="97.5806%" y="277" width="0.8065%" height="15" fill="rgb(250,143,38)" fg:x="121" fg:w="1"/><text x="97.8306%" y="287.50"></text></g><g><title>simple`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="97.5806%" y="261" width="0.8065%" height="15" fill="rgb(248,25,0)" fg:x="121" fg:w="1"/><text x="97.8306%" y="271.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.81%)</title><rect x="97.5806%" y="245" width="0.8065%" height="15" fill="rgb(206,152,27)" fg:x="121" fg:w="1"/><text x="97.8306%" y="255.50"></text></g><g><title>simple`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.81%)</title><rect x="97.5806%" y="229" width="0.8065%" height="15" fill="rgb(240,77,30)" fg:x="121" fg:w="1"/><text x="97.8306%" y="239.50"></text></g><g><title>simple`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.81%)</title><rect x="97.5806%" y="213" width="0.8065%" height="15" fill="rgb(231,5,3)" fg:x="121" fg:w="1"/><text x="97.8306%" y="223.50"></text></g><g><title>simple`simple::utils::process_pages (120 samples, 96.77%)</title><rect x="2.4194%" y="565" width="96.7742%" height="15" fill="rgb(207,226,32)" fg:x="3" fg:w="120"/><text x="2.6694%" y="575.50">simple`simple::utils::process_pages</text></g><g><title>simple`simple::utils::process_pages (50 samples, 40.32%)</title><rect x="58.8710%" y="549" width="40.3226%" height="15" fill="rgb(222,207,47)" fg:x="73" fg:w="50"/><text x="59.1210%" y="559.50">simple`simple::utils::process_pages</text></g><g><title>simple`simple::utils::page (50 samples, 40.32%)</title><rect x="58.8710%" y="533" width="40.3226%" height="15" fill="rgb(229,115,45)" fg:x="73" fg:w="50"/><text x="59.1210%" y="543.50">simple`simple::utils::page</text></g><g><title>simple`simple::utils::targets_kv (2 samples, 1.61%)</title><rect x="97.5806%" y="517" width="1.6129%" height="15" fill="rgb(224,191,6)" fg:x="121" fg:w="2"/><text x="97.8306%" y="527.50"></text></g><g><title>simple`fancy_regex::Regex::new (2 samples, 1.61%)</title><rect x="97.5806%" y="501" width="1.6129%" height="15" fill="rgb(230,227,24)" fg:x="121" fg:w="2"/><text x="97.8306%" y="511.50"></text></g><g><title>simple`fancy_regex::Regex::new_options (2 samples, 1.61%)</title><rect x="97.5806%" y="485" width="1.6129%" height="15" fill="rgb(228,80,19)" fg:x="121" fg:w="2"/><text x="97.8306%" y="495.50"></text></g><g><title>simple`fancy_regex::compile::compile (2 samples, 1.61%)</title><rect x="97.5806%" y="469" width="1.6129%" height="15" fill="rgb(247,229,0)" fg:x="121" fg:w="2"/><text x="97.8306%" y="479.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="453" width="1.6129%" height="15" fill="rgb(237,194,15)" fg:x="121" fg:w="2"/><text x="97.8306%" y="463.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="437" width="1.6129%" height="15" fill="rgb(219,203,20)" fg:x="121" fg:w="2"/><text x="97.8306%" y="447.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="421" width="1.6129%" height="15" fill="rgb(234,128,8)" fg:x="121" fg:w="2"/><text x="97.8306%" y="431.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="405" width="1.6129%" height="15" fill="rgb(248,202,8)" fg:x="121" fg:w="2"/><text x="97.8306%" y="415.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="389" width="1.6129%" height="15" fill="rgb(206,104,37)" fg:x="121" fg:w="2"/><text x="97.8306%" y="399.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_repeat (2 samples, 1.61%)</title><rect x="97.5806%" y="373" width="1.6129%" height="15" fill="rgb(223,8,27)" fg:x="121" fg:w="2"/><text x="97.8306%" y="383.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::visit (2 samples, 1.61%)</title><rect x="97.5806%" y="357" width="1.6129%" height="15" fill="rgb(216,217,28)" fg:x="121" fg:w="2"/><text x="97.8306%" y="367.50"></text></g><g><title>simple`fancy_regex::compile::Compiler::compile_delegate (2 samples, 1.61%)</title><rect x="97.5806%" y="341" width="1.6129%" height="15" fill="rgb(249,199,1)" fg:x="121" fg:w="2"/><text x="97.8306%" y="351.50"></text></g><g><title>simple`fancy_regex::compile::compile_inner (2 samples, 1.61%)</title><rect x="97.5806%" y="325" width="1.6129%" height="15" fill="rgb(240,85,17)" fg:x="121" fg:w="2"/><text x="97.8306%" y="335.50"></text></g><g><title>simple`regex_automata::meta::regex::Builder::build (2 samples, 1.61%)</title><rect x="97.5806%" y="309" width="1.6129%" height="15" fill="rgb(206,108,45)" fg:x="121" fg:w="2"/><text x="97.8306%" y="319.50"></text></g><g><title>simple`regex_syntax::hir::translate::Translator::translate (1 samples, 0.81%)</title><rect x="98.3871%" y="293" width="0.8065%" height="15" fill="rgb(245,210,41)" fg:x="122" fg:w="1"/><text x="98.6371%" y="303.50"></text></g><g><title>simple`regex_syntax::ast::visitor::visit (1 samples, 0.81%)</title><rect x="98.3871%" y="277" width="0.8065%" height="15" fill="rgb(206,13,37)" fg:x="122" fg:w="1"/><text x="98.6371%" y="287.50"></text></g><g><title>simple`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.81%)</title><rect x="98.3871%" y="261" width="0.8065%" height="15" fill="rgb(250,61,18)" fg:x="122" fg:w="1"/><text x="98.6371%" y="271.50"></text></g><g><title>simple`regex_syntax::hir::translate::TranslatorI::hir_perl_unicode_class (1 samples, 0.81%)</title><rect x="98.3871%" y="245" width="0.8065%" height="15" fill="rgb(235,172,48)" fg:x="122" fg:w="1"/><text x="98.6371%" y="255.50"></text></g><g><title>simple`regex_syntax::unicode::perl_word (1 samples, 0.81%)</title><rect x="98.3871%" y="229" width="0.8065%" height="15" fill="rgb(249,201,17)" fg:x="122" fg:w="1"/><text x="98.6371%" y="239.50"></text></g><g><title>simple`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.81%)</title><rect x="98.3871%" y="213" width="0.8065%" height="15" fill="rgb(219,208,6)" fg:x="122" fg:w="1"/><text x="98.6371%" y="223.50"></text></g><g><title>all (124 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(248,31,23)" fg:x="0" fg:w="124"/><text x="0.2500%" y="703.50"></text></g><g><title>dyld`start (124 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(245,15,42)" fg:x="0" fg:w="124"/><text x="0.2500%" y="687.50">dyld`start</text></g><g><title>simple`main (124 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(222,217,39)" fg:x="0" fg:w="124"/><text x="0.2500%" y="671.50">simple`main</text></g><g><title>simple`std::rt::lang_start_internal (124 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="124"/><text x="0.2500%" y="655.50">simple`std::rt::lang_start_internal</text></g><g><title>simple`std::rt::lang_start::_{{closure}} (123 samples, 99.19%)</title><rect x="0.8065%" y="629" width="99.1935%" height="15" fill="rgb(252,166,36)" fg:x="1" fg:w="123"/><text x="1.0565%" y="639.50">simple`std::rt::lang_start::_{{closure}}</text></g><g><title>simple`std::sys_common::backtrace::__rust_begin_short_backtrace (123 samples, 99.19%)</title><rect x="0.8065%" y="613" width="99.1935%" height="15" fill="rgb(245,132,34)" fg:x="1" fg:w="123"/><text x="1.0565%" y="623.50">simple`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple`simple::main (123 samples, 99.19%)</title><rect x="0.8065%" y="597" width="99.1935%" height="15" fill="rgb(236,54,3)" fg:x="1" fg:w="123"/><text x="1.0565%" y="607.50">simple`simple::main</text></g><g><title>simple`simple::build (123 samples, 99.19%)</title><rect x="0.8065%" y="581" width="99.1935%" height="15" fill="rgb(241,173,43)" fg:x="1" fg:w="123"/><text x="1.0565%" y="591.50">simple`simple::build</text></g><g><title>simple`std::path::Path::_join (1 samples, 0.81%)</title><rect x="99.1935%" y="565" width="0.8065%" height="15" fill="rgb(215,190,9)" fg:x="123" fg:w="1"/><text x="99.4435%" y="575.50"></text></g></svg></svg>